ALTER TABLE PR_HARMONOGRAM add KONT Char(1) DEFAULT 'N' NOT NULL CHECK (KONT IN ('T','N'))
#TRY
update pr_harmonogram set kont ='N' where kont is null or kont not in ('T','N')
#C

update PR_HARMONOGRAM h
set kont ='T'
where rok = 2015 and ID_USLUGI in (4,5,6) and TYP ='J' and kont='N' and (data_od is null or data_od < '2015-01-01' )
and exists (select null from pr_zlecenia z where z.ID_HARM = h.ID_HARMONOGRAMU and z.ROK= h.ROK) 
#C

CREATE OR ALTER PROCEDURE SP_SPRZET_NIEDOSTARCZONY (ROK     Integer,
       MIES_OD Integer,
       MIES_DO Integer)
returns (DATA_DO         Date,
         WARSZTAT        Varchar(20),
         ID_HARMONOGRAMU Integer,
         NAZ_SPRZ        Varchar(255),
         NAZ_JEDNOSTKI   Char(80),
         KOD_REM         Varchar(10),
         NR_FABR         Varchar(50),
         PLANOWANE       Numeric(15,2),
         PRZYJETE        Decimal(15,2),
         NIE_DOST        Numeric(15,2),
         DATA_PRZYJ      Date,
         DATA_PROP_ZAK   Date)
AS 

begin
 IF(MIES_DO = 12) THEN DATA_DO = ROK || '-'|| MIES_DO ||'-' || 31;
 ELSE
 BEGIN
 DATA_DO = ROK || '-' || (MIES_DO + 1) ||'-' || 1;
 DATA_DO = DATA_DO -1;
 END
 FOR SELECT
 :DATA_DO,
 K.KOD AS WARSZTAT,
 H.ID_HARMONOGRAMU,
 CASE WHEN S.NAZWA IS NULL THEN H.ZADANIE ELSE S.NAZWA END  AS NAZ_SPRZ,
 J.JW || ' ' || J.MIEJSCOWOSC AS NAZ_JEDNOSTKI,
 R.KOD_REM,  H.NR_ZADANIA NR_FABR,
 CEIL(SUM(HD.ILOSC)) planowane,
 H.DATA_OD AS DATA_PRZYJ, H.DATA_DO  AS DATA_PROP_ZAK
 FROM PR_harmonogram H
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU AND HD.ROK = H.ROK
 LEFT OUTER JOIN PR_SPRZET    S ON S.ID_SPRZETU = H.ID_SPRZETU
 LEFT OUTER JOIN PR_JEDNOSTKI J ON J.ID_JEDNOSTKI = H.ID_JEDNOSTKI
 LEFT OUTER JOIN PR_KOMORKI   K ON K.ID_KOMORKI = H.ID_KOMORKI
 LEFT OUTER JOIN PR_REMONTY R ON R.ID_REMONTU = H.ID_REMONTU
 LEFT OUTER JOIN PR_KODY_USLUG U ON U.ID_USLUGI = H.ID_USLUGI
 WHERE  H.ROK= :ROK AND  U.GLOWNY ='T'   AND  HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO AND h.KONT='N'
 GROUP BY K.KOD, H.ID_HARMONOGRAMU, S.NAZWA, H.ZADANIE,J.JW, J.MIEJSCOWOSC ,R.KOD_REM,  H.NR_ZADANIA, H.DATA_OD, H.DATA_DO
 ORDER BY K.KOD, H.ID_HARMONOGRAMU
 INTO :DATA_DO, :WARSZTAT,  :ID_HARMONOGRAMU, :NAZ_SPRZ, :NAZ_JEDNOSTKI,:KOD_REM, :NR_FABR, :PLANOWANE,  :DATA_PRZYJ,:DATA_PROP_ZAK
 DO
 BEGIN
 SELECT SUM(M.ILOSC) FROM PR_MAGAZYN M
 inner join PR_ZLECENIA z on
 z.ID_KOMORKI_GLW = m.ID_KOMORKI and
 z.ROK_MAG = m.ROK and
 z.ID_MAG = m.ID_MAG and
 z.DEPOZYT = m.DEPOZYT
 WHERE z.ID_HARM = :ID_HARMONOGRAMU AND z.ROK = :ROK AND  M.DATA_PRZYJ <= :DATA_DO
 into :PRZYJETE;
 IF(PLANOWANE IS NULL) THEN PLANOWANE=0.0;
 IF(PRZYJETE IS NULL) THEN PRZYJETE =0.0;
 NIE_DOST = PLANOWANE - PRZYJETE;
 IF(NIE_DOST IS NULL OR NIE_DOST <0.0) THEN NIE_DOST = 0.0;
 IF(NIE_DOST >0) THEN SUSPEND;
 END
end
#C

CREATE OR ALTER PROCEDURE SP_SPRZET_NIEDOSTARCZONY_V1 (ROK     Integer,
       DATA_DO Date)
returns (WARSZTAT        Varchar(20),
         ID_HARMONOGRAMU Integer,
         NAZ_SPRZ        Varchar(255),
         NAZ_JEDNOSTKI   Char(80),
         KOD_REM         Varchar(10),
         NR_FABR         Varchar(50),
         PLANOWANE       Numeric(15,2),
         PRZYJETE        Decimal(15,2),
         NIE_DOST        Numeric(15,2),
         DATA_PRZYJ      Date,
         DATA_PROP_ZAK   Date)
AS 

begin
 FOR SELECT
 K.KOD AS WARSZTAT,
 H.ID_HARMONOGRAMU,
 CASE WHEN S.NAZWA IS NULL THEN H.ZADANIE ELSE S.NAZWA END  AS NAZ_SPRZ,
 J.JW || ' ' || J.MIEJSCOWOSC AS NAZ_JEDNOSTKI,
 R.KOD_REM,  H.NR_ZADANIA NR_FABR,
 CEIL(SUM(HD.ILOSC)) planowane,
 H.DATA_OD AS DATA_PRZYJ, H.DATA_DO  AS DATA_PROP_ZAK
 FROM PR_harmonogram H
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU AND HD.ROK = H.ROK
 LEFT OUTER JOIN PR_SPRZET    S ON S.ID_SPRZETU = H.ID_SPRZETU
 LEFT OUTER JOIN PR_JEDNOSTKI J ON J.ID_JEDNOSTKI = H.ID_JEDNOSTKI
 LEFT OUTER JOIN PR_KOMORKI   K ON K.ID_KOMORKI = H.ID_KOMORKI
 LEFT OUTER JOIN PR_REMONTY R ON R.ID_REMONTU = H.ID_REMONTU
 LEFT OUTER JOIN PR_KODY_USLUG U ON U.ID_USLUGI = H.ID_USLUGI
 WHERE  H.ROK= :ROK AND  U.GLOWNY ='T'   AND h.KONT='N' AND  H.DATA_OD <=:DATA_DO
 GROUP BY K.KOD, H.ID_HARMONOGRAMU, S.NAZWA, H.ZADANIE,J.JW, J.MIEJSCOWOSC ,R.KOD_REM,  H.NR_ZADANIA, H.DATA_OD, H.DATA_DO
 ORDER BY K.KOD, H.ID_HARMONOGRAMU
 INTO :WARSZTAT,  :ID_HARMONOGRAMU, :NAZ_SPRZ, :NAZ_JEDNOSTKI,:KOD_REM, :NR_FABR, :PLANOWANE,  :DATA_PRZYJ,:DATA_PROP_ZAK
 DO
 BEGIN
 SELECT SUM(M.ILOSC) FROM PR_MAGAZYN M
 inner join PR_ZLECENIA z on
 z.ID_KOMORKI_GLW = m.ID_KOMORKI and
 z.ROK_MAG = m.ROK and
 z.ID_MAG = m.ID_MAG and
 z.DEPOZYT = m.DEPOZYT AND
 z.NR_KOL=0
 WHERE z.ID_HARM = :ID_HARMONOGRAMU AND z.ROK = :ROK AND  M.DATA_PRZYJ <= :DATA_DO
 into :PRZYJETE;
 IF(PLANOWANE IS NULL) THEN PLANOWANE=0.0;
 IF(PRZYJETE IS NULL) THEN PRZYJETE =0.0;
 NIE_DOST = PLANOWANE - PRZYJETE;
 IF(NIE_DOST IS NULL OR NIE_DOST <0.0) THEN NIE_DOST = 0.0;
 IF(NIE_DOST >0) THEN SUSPEND;
 END
end
#C
