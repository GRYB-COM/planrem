
CREATE TABLE OP_GRFUN (
       KOD_GRUPY INTEGER,
       KOD_FUNSYS VARCHAR(5),
       KOD_SYSTEMU INTEGER,
       PRIMARY KEY (KOD_SYSTEMU,KOD_FUNSYS,KOD_GRUPY)
)
#C

CREATE TABLE OP_GRUPY (
       KOD_GRUPY INTEGER,
       NAZWA Char(15),
       OPIS Char(100),
       PRIMARY KEY (KOD_GRUPY)
)
#C

CREATE TABLE OP_OPER (
       KOD_OPER INTEGER,
       NAZWA VARCHAR(20),
       OPIS Varchar(100),
       NAZWA_ZEWN Varchar(50),
       STATUS Char(1),
       KOD_SKROCONY Char(7),
       KOD_WYDZIALU Char(7),
       DATA_ZMH Date,
       HASLO Varchar(30),
       PRIMARY KEY (KOD_OPER)
)
#C

CREATE TABLE OP_OPERGRUP (
       KOD_OPER INTEGER,
       KOD_GRUPY integer,
       PRIMARY KEY (KOD_GRUPY,KOD_OPER)
)
#C

CREATE TABLE OP_OPFUN (
       KOD_OPER INTEGER,
       KOD_FUNSYS VARCHAR(5),
       KOD_SYSTEMU INTEGER,
       PRIMARY KEY (KOD_SYSTEMU,KOD_FUNSYS,KOD_OPER)
)
#C

CREATE TABLE OP_SLFUN (
       KOD_SYSTEMU INTEGER,
       OPIS Char(100),
       KOD_FUNSYS VARCHAR(5),
       PRIMARY KEY (KOD_SYSTEMU,KOD_FUNSYS)
)
#C

CREATE TABLE IS_PARAMS (
       ID_SYSTEMU Integer NOT NULL,
       SET_ID Integer NOT NULL,
       SET_NAME Varchar(60),
       XML Blob SUB_TYPE 1 SEGMENT SIZE 256
)
#C

CREATE GENERATOR GEN_KOD_OPER
#C

SET GENERATOR GEN_KOD_OPER TO 3
#C

CREATE OR ALTER PROCEDURE ADM_PR_KOD_OPER 
returns (ID_OPER Integer)
AS 

begin
 ID_OPER = GEN_ID(GEN_KOD_OPER,1);
end
#C


ALTER TABLE OP_GRFUN ADD CONSTRAINT FK_OP_GRUPY1 FOREIGN KEY (KOD_GRUPY) REFERENCES OP_GRUPY(KOD_GRUPY)
#C
ALTER TABLE OP_GRFUN ADD CONSTRAINT FK_OP_SLFUN2 FOREIGN KEY (KOD_SYSTEMU,KOD_FUNSYS) REFERENCES OP_SLFUN(KOD_SYSTEMU,KOD_FUNSYS)
#C
ALTER TABLE OP_OPERGRUP ADD CONSTRAINT FK_OP_GRUPY4 FOREIGN KEY (KOD_GRUPY) REFERENCES OP_GRUPY(KOD_GRUPY)
#C
ALTER TABLE OP_OPERGRUP ADD CONSTRAINT FK_OP_OPER3 FOREIGN KEY (KOD_OPER) REFERENCES OP_OPER(KOD_OPER)
#C
ALTER TABLE OP_OPFUN ADD CONSTRAINT FK_OP_OPER5 FOREIGN KEY (KOD_OPER) REFERENCES OP_OPER(KOD_OPER)
#C
ALTER TABLE OP_OPFUN ADD CONSTRAINT FK_OP_SLFUN6 FOREIGN KEY (KOD_SYSTEMU,KOD_FUNSYS) REFERENCES OP_SLFUN(KOD_SYSTEMU,KOD_FUNSYS)
#C

INSERT INTO OP_OPER(KOD_OPER, NAZWA, OPIS, NAZWA_ZEWN, STATUS, KOD_SKROCONY, KOD_WYDZIALU, DATA_ZMH, HASLO) VALUES(2, 'ADMINISTRATOR', 'ADMIN', NULL, 'T', NULL, NULL, NULL, 'a')
#TRY
INSERT INTO OP_SLFUN(KOD_SYSTEMU, OPIS, KOD_FUNSYS) VALUES(1, 'Informacje systemowe i raporty', 'ADINF')
#C
INSERT INTO OP_SLFUN(KOD_SYSTEMU, OPIS, KOD_FUNSYS) VALUES(1, 'Wprowadzanie i zmiany funkcjonalnoœci', 'ADRF')
#C
INSERT INTO OP_SLFUN(KOD_SYSTEMU, OPIS, KOD_FUNSYS) VALUES(1, 'Wprowadzanie i zmiany grup u¿ytkowników', 'ADRG')
#C
INSERT INTO OP_SLFUN(KOD_SYSTEMU, OPIS, KOD_FUNSYS) VALUES(1, 'Wprowadzanie i zmiany operatorów', 'ADRO')
#C
INSERT INTO OP_SLFUN(KOD_SYSTEMU, OPIS, KOD_FUNSYS) VALUES(1, 'Rejestrowanie systemów', 'ADRS')
#C

INSERT INTO OP_SLFUN(KOD_SYSTEMU, OPIS, KOD_FUNSYS) VALUES(1, 'Edycja s³owników', 'ADICT')
#C


INSERT INTO OP_OPFUN(KOD_OPER,KOD_FUNSYS,KOD_SYSTEMU) select 2, KOD_FUNSYS, KOD_SYSTEMU FROM OP_SLFUN
#C

