CREATE OR ALTER PROCEDURE SP_MIES_OD_DO_ZLEC (ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       POZYCJA    Integer,
       ID_KOMORKI Integer)
returns (ILOSC_P       Decimal(15,2),
         ILOSC_R       Numeric(15,2),
         RBH_P         Numeric(15,2),
         RBH_R         Numeric(15,2),
         ILOSC_WP      Numeric(15,2),
         ILOSC_WZ      Numeric(15,2),
         RODZ_REM      Varchar(10),
         SYGN_ZLECENIA Varchar(60),
         DATA_PRZYJ    Date,
         DATA_PRZEKAZ  Date,
         JW            Varchar(200),
         NAZ_SPRZ      Varchar(200),
         JIM           Varchar(20),
         ILOSC_WZS     Varchar(20),
         PROC_WZ       Varchar(20),
         ILOSC_WPS     Varchar(20),
         PROC_WP       Varchar(20),
         ID_HARM       Integer)
AS 
  declare variable POZYCJA_OD Integer;
  declare variable POZYCJA_DO Integer;
  declare variable KOMORKA_OD Integer;
  declare variable KOMORKA_DO Integer;
  declare variable ROK_HARM Integer;
  declare variable ID_SPRZETU_OD Integer;
  declare variable ID_SPRZETU_DO Integer;
begin
 ILOSC_P=0; ILOSC_R=0;  RBH_P=0; RBH_R=0; ILOSC_WP=0; ILOSC_WZ=0;
 IF(POZYCJA IS NULL OR POZYCJA <1) THEN
 BEGIN POZYCJA_OD =0; POZYCJA_DO = 999999999; END
 ELSE
 BEGIN POZYCJA_OD =POZYCJA; POZYCJA_DO = POZYCJA; END
 IF(ID_KOMORKI IS NULL OR ID_KOMORKI <1) THEN
 BEGIN KOMORKA_OD =0; KOMORKA_DO = 999999999; END
 ELSE
 BEGIN KOMORKA_OD =ID_KOMORKI; KOMORKA_DO = ID_KOMORKI; END
 FOR SELECT H.ROK, H.ID_HARMONOGRAMU,  RE.KOD_REM,Z.SYGN_ZLECENIA,m.DATA_PRZYJ,m.DATA_PRZEKAZ,
 coalesce(j.JW,' ') || ' ' || coalesce(j.MIEJSCOWOSC,' '), S.NAZWA, S.INDEKS_MAT,
 SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN R.PLAN_ILOSC ELSE 0.0 END),
 SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN R.PLAN_RBH ELSE 0.0 END),
 SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN R.ILOSC ELSE 0.0 END),
 SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN R.LICZBA_RBH ELSE 0.0 END)
 FROM PR_HARMONOGRAM H
 INNER JOIN PR_ZLECENIA     Z  ON Z.ROK = H.ROK AND Z.ID_HARM = H.ID_HARMONOGRAMU
 INNER JOIN PR_ZLECENIA_RBH R  ON R.ID_ZLECENIA = Z.ID_ZLECENIA AND R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI
 INNER JOIN PR_MAGAZYN      M  ON M.ID_MAG = Z.ID_MAG AND M.ID_KOMORKI = Z.ID_KOMORKI_GLW AND M.ROK = Z.ROK_MAG AND M.DEPOZYT = Z.DEPOZYT
 INNER JOIN PR_KODY_USLUG   U  ON U.ID_USLUGI   = H.ID_USLUGI
 INNER JOIN PR_REMONTY      RE ON RE.ID_REMONTU = H.ID_REMONTU
 INNER JOIN PR_JEDNOSTKI    J  ON J.ID_JEDNOSTKI = M.ID_JEDNOSTKI
 LEFT JOIN PR_SPRZET       S  ON S.ID_SPRZETU = M.ID_SPRZETU
 WHERE
 H.ROK = :ROK AND
 H.ID_KOMORKI  BETWEEN  :KOMORKA_OD AND :KOMORKA_DO  AND
 U.POZYCJA     BETWEEN  :POZYCJA_OD AND :POZYCJA_DO  AND
 R.MIESIAC     BETWEEN  :MIES_OD    AND :MIES_DO  
 GROUP BY H.ROK, H.ID_HARMONOGRAMU,RE.KOD_REM,Z.SYGN_ZLECENIA,m.DATA_PRZYJ,m.DATA_PRZEKAZ,J.JW,J.MIEJSCOWOSC, S.NAZWA, S.INDEKS_MAT
 ORDER BY SYGN_ZLECENIA
 INTO :ROK_HARM, :ID_HARM, :RODZ_REM, :SYGN_ZLECENIA, :DATA_PRZYJ, :DATA_PRZEKAZ, :JW,:NAZ_SPRZ , :JIM ,:ILOSC_P, :RBH_P, :ILOSC_R, :RBH_R
 DO BEGIN
 IF(ILOSC_P IS NULL) THEN ILOSC_P =0;
 IF(RBH_P IS NULL)   THEN RBH_P =0;
 IF(ILOSC_R IS NULL) THEN ILOSC_R =0;
 IF(RBH_R IS NULL)   THEN RBH_R =0;
 IF(ILOSC_P <> 0 OR RBH_P <> 0 OR ILOSC_R<>0 OR RBH_R<>0) THEN
 BEGIN
 /*ZALEGLOSCI MOGA BYC*/
 ILOSC_WZ = ILOSC_P - ILOSC_R;
 IF(ILOSC_WZ >0 AND POZYCJA IS NOT NULL AND POZYCJA <>999) THEN
 BEGIN
 ILOSC_WZS = CAST(ILOSC_WZ AS DECIMAL(15,2) );
 PROC_WZ   = CAST(ILOSC_WZ/ILOSC_P*100 AS DECIMAL(15,2));
 END
 ELSE
 BEGIN
 ILOSC_WZS ='-';
 PROC_WZ   ='-';
 END
 /*W PLANOWANYM TRAKCIE REMONTU ZAWSZE to samo co zal*/
 ILOSC_WP  = ILOSC_WZ;
 ILOSC_WPS = ILOSC_WZS;
 PROC_WP   = PROC_WZ;
 SUSPEND;
 END
 END
end
#C

CREATE OR ALTER PROCEDURE SP_KOMORKI_FOR_MIES_OD_DO_ZLEC (ROK     Integer,
       MIES_OD Integer,
       MIES_DO Integer)
returns (ID_KOMORKI  Integer,
         KOMORKA_IDX Integer,
         KOD         Varchar(20),
         NAZWA       Varchar(210),
         ILOSC_P     Numeric(15,2),
         RODZ_REM    Varchar(10),
         ILOSC_R     Numeric(15,2),
         RBH_P       Numeric(15,2),
         RBH_R       Numeric(15,2),
         ILOSC_WP    Numeric(15,2),
         ILOSC_WZ    Numeric(15,2),
         PROC_WP     Varchar(20),
         PROC_WZ     Varchar(20),
         ILOSC_WPS   Varchar(20),
         ILOSC_WZS   Varchar(20))
AS 
  declare variable ID_WYDZIALU Integer;
  declare variable TYLKORAZ Char(1);
  declare variable NAZWA_WYDZ Varchar(80);
  declare variable NAZWA_WAR Varchar(120);
begin
 FOR SELECT ID_WYDZIALU, NAZWA FROM PR_WYDZIALY ORDER BY KOD
 INTO :ID_WYDZIALU, :NAZWA_WYDZ DO
 BEGIN
 TYLKORAZ ='T';
 FOR  SELECT DISTINCT K.ID_KOMORKI, K.KOD,  K.NAZWA
 FROM PR_KOMORKI K
 WHERE K.WARSZTAT='T' AND K.KOD <>'0/0'  AND K.ID_WYDZIALU = :ID_WYDZIALU
 ORDER BY K.KOD
 INTO :ID_KOMORKI, :KOD, :NAZWA_WAR
 DO BEGIN
 SELECT sum(ILOSC_P), sum(ILOSC_R), sum(RBH_P), sum(RBH_R), sum(ILOSC_WP), sum(ILOSC_WZ)
 FROM SP_MIES_OD_DO_ZLEC(:ROK,:MIES_OD,:MIES_DO,NULL,:ID_KOMORKI)
 INTO  :ILOSC_P, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 IF (TYLKORAZ ='T' )THEN
 BEGIN
 KOMORKA_IDX =0;
 NAZWA = NAZWA_WYDZ;
 TYLKORAZ='N';
 SUSPEND;
 END
 /*ZALEGLOSCI MOGA BYC*/
  ILOSC_WZ = ILOSC_P - ILOSC_R;
 IF(ILOSC_WZ >0 ) THEN
 BEGIN
 ILOSC_WZS = CAST(ILOSC_WZ AS DECIMAL(15,2) );
 PROC_WZ   = CAST(ILOSC_WZ/ILOSC_P*100 AS DECIMAL(15,2));
 END
 ELSE
 BEGIN
 ILOSC_WZS ='-';
 PROC_WZ   ='-';
 END
 /*W PLANOWANYM TRAKCIE REMONTU ZAWSZE to samo co zal*/
 ILOSC_WP  = ILOSC_WZ;
 ILOSC_WPS = ILOSC_WZS;
 PROC_WP   = PROC_WZ;
 KOMORKA_IDX =1;
 NAZWA = KOD || ' - ' || NAZWA_WAR;
 SUSPEND;
 NAZWA = NULL;
 KOMORKA_IDX =2;
 SUSPEND;
 KOMORKA_IDX =3;
 NAZWA='RAZEM WARSZTAT' || KOD;
 SUSPEND;
 END
 END
 END
end
#C

CREATE OR ALTER PROCEDURE SP_KODY_USLUG_FOR_MIES_ZLEC (ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       ID_KOMORKI Integer)
returns (POZYCJA     Integer,
         POZYCJA_IDX Integer,
         NAZWA       Varchar(200),
         ILOSC_P     Numeric(15,2),
         ILOSC_R     Numeric(15,2),
         RBH_P       Numeric(15,2),
         RBH_R       Numeric(15,2),
         ILOSC_WP    Numeric(15,2),
         ILOSC_WZ    Numeric(15,2),
         PROC_WP     Varchar(20),
         PROC_WZ     Varchar(20),
         RODZ_REM    Varchar(10),
         ILOSC_WPS   Varchar(20),
         ILOSC_WZS   Varchar(20))
AS 

begin
 FOR  SELECT DISTINCT K.POZYCJA,
 CASE WHEN K.POZYCJA = 999 THEN 'POZOSTA£E ZADANIA' ELSE K.NAZ_REMONTU END
 FROM PR_KODY_USLUG K
 ORDER BY K.POZYCJA
 INTO :POZYCJA,  :NAZWA
 DO BEGIN
 SELECT SUM(ILOSC_P), SUM(ILOSC_R), SUM(RBH_P), SUM(RBH_R)
 FROM SP_MIES_OD_DO_ZLEC(:ROK,:MIES_OD,:MIES_DO,:POZYCJA,:ID_KOMORKI)
 INTO  :ILOSC_P, :ILOSC_R, :RBH_P, :RBH_R;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 POZYCJA_IDX =1;
 SUSPEND;
  /*ZALEGLOSCI MOGA BYC*/
  ILOSC_WZ = ILOSC_P - ILOSC_R;
 IF(ILOSC_WZ >0  AND POZYCJA IS NOT NULL AND POZYCJA <>999) THEN
 BEGIN
 ILOSC_WZS = CAST(ILOSC_WZ AS DECIMAL(15,2) );
 PROC_WZ   = CAST(ILOSC_WZ/ILOSC_P*100 AS DECIMAL(15,2));
 END
 ELSE
 BEGIN
 ILOSC_WZS ='-';
 PROC_WZ   ='-';
 END
 /*W PLANOWANYM TRAKCIE REMONTU ZAWSZE to samo co zal*/
 ILOSC_WP  = ILOSC_WZ;
 ILOSC_WPS = ILOSC_WZS;
 PROC_WP   = PROC_WZ;
 POZYCJA_IDX =2;
 SUSPEND;
 POZYCJA_IDX =3;
 NAZWA='RAZEM ' || NAZWA;
 SUSPEND;
 END
 END
end
#C

CREATE OR ALTER PROCEDURE SP_MIESIECZNE (ROK           Integer,
       MIES_DO       Integer,
       MIES_OD       Integer,
       ID_KOMORKI_IN Integer)
returns (POZYCJA           Integer,
         POZYCJA_IDX       Integer,
         KOD_WARSZTATU     Varchar(20),
         KOD_WARSZTATU_IDX Integer,
         LP                Integer,
         NAZWA             Varchar(210),
         INDEKS_MAT        Varchar(20),
         ILOSC_P           Numeric(15,2),
         ID_HARM           Integer,
         JW                Varchar(200),
         RODZ_REM          Varchar(10),
         RBH_P             Numeric(15,2),
         SYGN_ZLEC         Varchar(60),
         DATA_PRZYJ        Date,
         RBH_R             Numeric(15,2),
         ILOSC_R           Numeric(15,2),
         DATA_PRZEKAZ      Date,
         ILOSC_WP          Numeric(15,2),
         ILOSC_WZ          Numeric(15,2),
         PROC_WP           Varchar(20),
         PROC_WZ           Varchar(20),
         ILOSC_WPS         Varchar(20),
         ILOSC_WZS         Varchar(20))
AS 
  declare variable ID_SPRZETU integer;
  declare variable ID_KOMORKI integer;
  declare variable ID_KOMORKI_OD Integer;
  declare variable ID_KOMORKI_DO Integer;
begin
 LP=1;
 IF(ID_KOMORKI IS NULL OR ID_KOMORKI <=0) THEN BEGIN ID_KOMORKI_OD =0; ID_KOMORKI_DO =999999; END
 ELSE BEGIN ID_KOMORKI_OD =ID_KOMORKI_IN; ID_KOMORKI_DO =ID_KOMORKI_IN; END
 FOR SELECT ID_KOMORKI, KOD, KOMORKA_IDX, NAZWA, ILOSC_P, RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_KOMORKI_FOR_MIES_OD_DO_ZLEC(:ROK,:MIES_OD,:MIES_DO)
 WHERE ID_KOMORKI BETWEEN :ID_KOMORKI_OD AND :ID_KOMORKI_DO
 INTO  :ID_KOMORKI,:KOD_WARSZTATU, :KOD_WARSZTATU_IDX, :NAZWA, :ILOSC_P,:RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 IF(KOD_WARSZTATU_IDX IN (0,1,3)  ) THEN
 BEGIN
 POZYCJA       = NULL;
 POZYCJA_IDX   = 0;
 RODZ_REM = NULL;
 ID_HARM=NULL;
 JW=NULL;
 DATA_PRZYJ=NULL;
 DATA_PRZEKAZ=NULL;
 SYGN_ZLEC=NULL; 
 SUSPEND;
 END
 ELSE IF(KOD_WARSZTATU_IDX  =2) THEN
 BEGIN
 FOR SELECT POZYCJA,  POZYCJA_IDX, NAZWA, ILOSC_P, RODZ_REM, ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_KODY_USLUG_FOR_MIES_ZLEC(:ROK,:MIES_OD,:MIES_DO,:ID_KOMORKI)
 INTO  :POZYCJA, :POZYCJA_IDX, :NAZWA, :ILOSC_P,:RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 IF(POZYCJA_IDX = 1 OR POZYCJA_IDX =3) THEN
 BEGIN
 RODZ_REM = NULL;
 ID_HARM=NULL;
 JW=NULL;
 DATA_PRZYJ=NULL;
 DATA_PRZEKAZ=NULL;
 SYGN_ZLEC=NULL; 
 SUSPEND;
 END
 ELSE IF(KOD_WARSZTATU_IDX =2) THEN
 BEGIN
 FOR SELECT JIM, NAZ_SPRZ, ILOSC_P, RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS, DATA_PRZYJ,
 DATA_PRZEKAZ,JW,ID_HARM,SYGN_ZLECENIA
 FROM SP_MIES_OD_DO_ZLEC(:ROK,:MIES_OD,:MIES_DO,:POZYCJA,:ID_KOMORKI)
 INTO  :INDEKS_MAT, :NAZWA, :ILOSC_P, :RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS, :DATA_PRZYJ,
 :DATA_PRZEKAZ,JW,ID_HARM,:SYGN_ZLEC
 DO BEGIN
 SUSPEND;
 LP = LP +1;
 END
 END
 END
 END
 END
end
#C

