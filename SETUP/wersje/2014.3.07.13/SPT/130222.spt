CREATE UNIQUE INDEX PR_MAGAZYN_IDX_NR_MAG ON PR_MAGAZYN(ROK,ID_KOMORKI,DEPOZYT,NR_MAG)
#C

create exception PR_BAD_NR_MAG 'Zwielokrotniony nr magazynu'
#C

CREATE OR ALTER PROCEDURE PR_ADD2MAGAZYN (SYGN_MAG      Varchar(50),
       DEPOZYT       Char(1),
       ID_MAG        Integer,
       ID_SPRZETU    Integer,
       ID_HARM       Integer,
       ILOSC         Numeric(15,2),
       UWAGI         Varchar(200),
       DATA_PRZEKAZ  Date,
       STATUS        Char(1),
       DATA_PRZYJ    Date,
       NR_FABR       Varchar(60),
       PODSTAWA      Varchar(200),
       ID_JEDNOSTKI  Integer,
       ID_REMONTU    Integer,
       NR_HARM       Integer,
       KOD_WARSZTATU Varchar(5),
       ROK           Integer,
       NR_REJ        Varchar(60),
       GLOWNY_KUT    Varchar(60),
       ID_KOMORKI    Integer,
       NR_MAG        Integer,
       PROT_PRZEKAZ  Varchar(200),
       PROT_PRZYJ    Varchar(200),
       DATA_PROP_ZAK Date,
       DATA_ZAK      Date)
AS 
  declare variable COUNTER Integer;
begin
select coalesce(count(*),0) from pr_magazyn m where m.ROK = :ROK and m.ID_KOMORKI = :ID_KOMORKI and M.DEPOZYT = :DEPOZYT AND M.NR_MAG = :NR_MAG INTO :COUNTER;
IF(COUNTER >1) THEN EXCEPTION PR_BAD_NR_MAG;
ELSE IF(COUNTER = 1) THEN
BEGIN
 UPDATE PR_MAGAZYN m SET ID_MAG = :ID_MAG where m.ROK = :ROK and m.ID_KOMORKI = :ID_KOMORKI and M.DEPOZYT = :DEPOZYT AND M.NR_MAG = :NR_MAG;
END
ELSE
BEGIN
     INSERT INTO  
       PR_MAGAZYN(DEPOZYT, SYGN_MAG, ID_MAG, ID_SPRZETU, ID_HARM, UWAGI, ILOSC, DATA_PRZEKAZ, STATUS, DATA_PRZYJ, NR_FABR, PODSTAWA, ID_JEDNOSTKI, NR_HARM, ID_REMONTU, 
                           KOD_WARSZTATU, NR_REJ, ROK, GLOWNY_KUT, ID_KOMORKI, NR_MAG, PROT_PRZEKAZ, PROT_PRZYJ, DATA_PROP_ZAK, DATA_ZAK)
       VALUES(:DEPOZYT, :SYGN_MAG, :ID_MAG, :ID_SPRZETU, :ID_HARM, :UWAGI, :ILOSC, :DATA_PRZEKAZ, :STATUS, :DATA_PRZYJ, :NR_FABR, :PODSTAWA, :ID_JEDNOSTKI, :NR_HARM, :ID_REMONTU, 
                           :KOD_WARSZTATU, :NR_REJ, :ROK, :GLOWNY_KUT, :ID_KOMORKI, :NR_MAG, :PROT_PRZEKAZ, :PROT_PRZYJ, :DATA_PROP_ZAK, :DATA_ZAK);
end
end
#C

