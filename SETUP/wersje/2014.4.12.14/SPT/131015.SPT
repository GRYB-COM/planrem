CREATE OR ALTER PROCEDURE SP_SUROWA_LISTA_KUT (
    KOD VARCHAR(20),
    DZIAL VARCHAR(10),
    ROK INTEGER,
    MIES_OD INTEGER,
    MIES_DO INTEGER)
RETURNS (
    KOD_WAR VARCHAR(20),
    ROK_MAG INTEGER,
    NR_MAG INTEGER,
    DEPOZYT CHAR(1),
    IDX_1 INTEGER,
    IDX_2 INTEGER,
    NAGL_1 VARCHAR(100),
    SYGN_MAG VARCHAR(50),
    ID_HARM INTEGER,
    ID_HARM_Z INTEGER,
    NAZWA VARCHAR(200),
    INDEKS_MAT VARCHAR(20),
    KOD_REM VARCHAR(10),
    NR_FABR VARCHAR(60),
    NR_REJ VARCHAR(60),
    ILOSC_PRZYJ NUMERIC(15,2),
    RBH_PLAN NUMERIC(15,2),
    ILOSC_PLAN NUMERIC(15,2),
    ILOSC_Z NUMERIC(15,2),
    ILOSC_REM NUMERIC(15,2),
    RBH_REM NUMERIC(10,2),
    JW VARCHAR(60),
    MIEJSCOWOSC VARCHAR(80),
    DATA_PRZYJ DATE,
    DATA_ZAK DATE,
    DATA_POW DATE,
    IL_POW INTEGER,
    SYGN_ZLECENIA VARCHAR(60),
    DATA_PRZEKAZ DATE,
    DATA_ZDA_KUT DATE,
    UWAGI VARCHAR(200))
AS
DECLARE VARIABLE ID_WYDZIALU INTEGER;
DECLARE VARIABLE ROK_OD INTEGER;
DECLARE VARIABLE ROK_DO INTEGER;
DECLARE VARIABLE ID_KOMORKI_DO INTEGER;
DECLARE VARIABLE ID_KOMORKI_OD INTEGER;
DECLARE VARIABLE ID_MAG INTEGER;
DECLARE VARIABLE ID_KOMORKI_GLW INTEGER;
begin
 IF(ROK >0) THEN BEGIN ROK_OD = ROK; ROK_DO = ROK; END
 ELSE BEGIN ROK_OD = 0; ROK_DO = 999999999; END
 IF(KOD='0/0') THEN
 SELECT MIN(K.ID_KOMORKI), MAX(K.ID_KOMORKI) FROM PR_KOMORKI K WHERE WARSZTAT ='T' INTO :ID_KOMORKI_OD,  :ID_KOMORKI_DO;
 ELSE
 SELECT MIN(K.ID_KOMORKI), MAX(K.ID_KOMORKI) FROM PR_KOMORKI K WHERE KOD=:KOD INTO :ID_KOMORKI_OD,  :ID_KOMORKI_DO;
 SELECT MIN(ID_WYDZIALU) FROM PR_WYDZIALY WHERE KOD = :DZIAL INTO :ID_WYDZIALU;
 IDX_2=1;
 IDX_2=2;
 FOR select
 k.KOD,   M.ROK, M.NR_MAG, M.DEPOZYT,  m.ID_MAG, m.ID_KOMORKI, ku.pozycja,
 CASE WHEN KU.POZYCJA = '999' THEN 'POZOSTA£E ZADANIA'  ELSE KU.NAZ_REMONTU END,
 m.sygn_mag, m.ID_HARM, z.id_harm, s.NAZWA, s.INDEKS_MAT,   r.KOD_REM, m.NR_FABR, m.NR_REJ, m.ILOSC AS ILOSC_PRZYJ,
 z.LICZBA_RBH as RBH_PLAN,
 (SELECT SUM(HD.ILOSC) FROM  PR_HARMONOGRAM_DET HD WHERE  HD.ID_HARMONOGRAMU = Z.ID_HARM AND HD.ROK = Z.ROK AND HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO) as ILOSC_PLAN,
 (SELECT SUM(ZD.ILOSC) FROM  PR_ZLECENIA_RBH ZD WHERE  ZD.ID_ZLECENIA = Z.ID_ZLECENIA AND ZD.ROK = Z.ROK AND ZD.ID_KOMORKI = Z.ID_KOMORKI AND ZD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO) as ILOSC_REM,
 (SELECT SUM(ZD.LICZBA_RBH) FROM  PR_ZLECENIA_RBH ZD WHERE  ZD.ID_ZLECENIA = Z.ID_ZLECENIA AND ZD.ROK = Z.ROK AND ZD.ID_KOMORKI = Z.ID_KOMORKI AND ZD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO) as RBH_REM,
 j.JW, j.MIEJSCOWOSC, m.DATA_PRZYJ, m.DATA_ZAK,
 (select max(p.DATA_WYST) from pr_powiad p
 inner join PR_POWIAD2MAGAZYN pm on pm.ID_POWIAD = p.ID_POWIAD and pm.ROK_POW = p.ROK and pm.ID_WYDZIALU = p.ID_WYDZIALU
 where pm.DEPOZYT = m.DEPOZYT and pm.ROK = m.ROK and pm.ID_KOMORKI = m.ID_KOMORKI and pm.ID_MAG = m.ID_MAG)  AS DATA_POW,
 (select COUNT(DISTINCT P.ID_POWIAD) from pr_powiad p
 inner join PR_POWIAD2MAGAZYN pm on pm.ID_POWIAD = p.ID_POWIAD and pm.ROK_POW = p.ROK and pm.ID_WYDZIALU = p.ID_WYDZIALU
 where pm.DEPOZYT = m.DEPOZYT and pm.ROK = m.ROK and pm.ID_KOMORKI = m.ID_KOMORKI and pm.ID_MAG = m.ID_MAG)  AS IL_POW,
 z.SYGN_ZLECENIA, m.DATA_PRZEKAZ, z.DATA_ZDA_KUT, m.UWAGI
 from pr_zlecenia z
 left outer join pr_jednostki   j  on j.ID_JEDNOSTKI = z.ID_JEDNOSTKI
 left outer join pr_magazyn     m  on m.DEPOZYT = z.DEPOZYT and m.ROK = z.ROK_MAG and m.ID_KOMORKI = z.ID_KOMORKI_GLW and m.ID_MAG = z.ID_MAG
 left outer join pr_remonty     r  on r.ID_REMONTU = m.ID_REMONTU
 left outer join pr_sprzet      s  on s.ID_SPRZETU = m.ID_SPRZETU
 LEFT OUTER JOIN PR_KOMORKI     K  on k.ID_KOMORKI = z.ID_KOMORKI
 left outer join PR_HARMONOGRAM h  on h.ROK =z.ROK and h.ID_HARMONOGRAMU = z.ID_HARM
 left outer join pr_kody_uslug  ku on ku.ID_USLUGI = h.ID_USLUGI
 WHERE Z.ROK between :ROK_OD and :ROK_DO AND
 ( (:ID_WYDZIALU IS NOT NULL AND K.ID_WYDZIALU = :ID_WYDZIALU) OR  (:ID_WYDZIALU IS NULL AND  K.ID_KOMORKI BETWEEN :ID_KOMORKI_OD AND :ID_KOMORKI_DO)  )
 INTO
 :KOD_WAR, :ROK_MAG, :NR_MAG, :DEPOZYT,:ID_MAG,:ID_KOMORKI_GLW,
 :IDX_1,:NAGL_1,:sygn_mag, :ID_HARM, :ID_HARM_Z, :NAZWA, :INDEKS_MAT, :KOD_REM, :NR_FABR, :NR_REJ,
 :ILOSC_PRZYJ,:RBH_PLAN,:ILOSC_PLAN,:ILOSC_REM,:RBH_REM,:JW,:MIEJSCOWOSC,:DATA_PRZYJ,:DATA_ZAK, 
 :DATA_POW, :IL_POW, :SYGN_ZLECENIA, :DATA_PRZEKAZ, :DATA_ZDA_KUT, :UWAGI
 do
 begin
 SELECT	coalesce(max(m.ILOSC),0) - coalesce(sum(case when r.ROK < :ROK then r.ILOSC else 0 end),0) AS ILOSC from PR_MAGAZYN m
 left join PR_ZLECENIA z on z.ID_MAG = m.ID_MAG and z.ROK_MAG=m.ROK and z.ID_KOMORKI_GLW = m.ID_KOMORKI and z.DEPOZYT = m.DEPOZYT and z.NR_KOL= 0
 left join PR_ZLECENIA_RBH r 				on r.ID_ZLECENIA = z.ID_ZLECENIA and r.ROK = z.ROK and r.ID_KOMORKI = z.ID_KOMORKI
  where
    m.ID_MAG =:ID_MAG and   
    m.ID_KOMORKI = :ID_KOMORKI_GLW and
    m.ROK = :ROK_MAG and
    m.DEPOZYT = :DEPOZYT  
  into :ILOSC_Z;
 SUSPEND;
 end
 end
#C

CREATE OR ALTER PROCEDURE SP_LISTA_KUT (
    KOD VARCHAR(20),
    DZIAL VARCHAR(10),
    ROK INTEGER,
    MIES_OD INTEGER,
    MIES_DO INTEGER)
RETURNS (
    IDX_1 INTEGER,
    IDX_2 INTEGER,
    NAGL_1 VARCHAR(100),
    SYGN_MAG VARCHAR(50),
    ID_HARM INTEGER,
    ID_HARM_Z INTEGER,
    ID_MAG INTEGER,
    ROK_MAG INTEGER,
    ID_KOMORKI_GLW INTEGER,
    DEPOZYT CHAR(1),
    NAZWA VARCHAR(200),
    INDEKS_MAT VARCHAR(20),
    KOD_REM VARCHAR(10),
    NR_FABR VARCHAR(60),
    NR_REJ VARCHAR(60),
    ILOSC_PRZYJ NUMERIC(15,2),
    ILOSC_Z NUMERIC(15,2),
    RBH_PLAN NUMERIC(15,2),
    ILOSC_REM NUMERIC(15,2),
    RBH_REM NUMERIC(10,2),
    JW VARCHAR(60),
    MIEJSCOWOSC VARCHAR(80),
    DATA_PRZYJ DATE,
    DATA_ZAK DATE,
    DATA_POW DATE,
    IL_POW INTEGER,
    SYGN_ZLECENIA VARCHAR(60),
    DATA_PRZEKAZ DATE,
    DATA_ZDA_KUT DATE,
    UWAGI VARCHAR(200))
AS
DECLARE VARIABLE ID_WYDZIALU INTEGER;
DECLARE VARIABLE ROK_OD INTEGER;
DECLARE VARIABLE ROK_DO INTEGER;
DECLARE VARIABLE ID_KOMORKI_DO INTEGER;
DECLARE VARIABLE ID_KOMORKI_OD INTEGER;
begin
 IF(ROK >0) THEN BEGIN ROK_OD = ROK; ROK_DO = ROK; END
 ELSE BEGIN ROK_OD = 0; ROK_DO = 999999999; END
 IF(KOD='0/0') THEN
 SELECT MIN(K.ID_KOMORKI), MAX(K.ID_KOMORKI) FROM PR_KOMORKI K WHERE WARSZTAT ='T' INTO :ID_KOMORKI_OD,  :ID_KOMORKI_DO;
 ELSE
 SELECT MIN(K.ID_KOMORKI), MAX(K.ID_KOMORKI) FROM PR_KOMORKI K WHERE KOD=:KOD INTO :ID_KOMORKI_OD,  :ID_KOMORKI_DO;
 SELECT MIN(ID_WYDZIALU) FROM PR_WYDZIALY WHERE KOD = :DZIAL INTO :ID_WYDZIALU;
 IDX_2=1;
 FOR SELECT KU.POZYCJA,
 CASE WHEN KU.POZYCJA = '999' THEN 'POZOSTA£E ZADANIA'  ELSE KU.NAZ_REMONTU END
 FROM PR_KODY_USLUG KU
 INNER JOIN PR_HARMONOGRAM  H ON KU.ID_USLUGI = H.ID_USLUGI
 INNER JOIN PR_ZLECENIA     Z ON Z.ROK = H.ROK AND Z.ID_HARM = H.ID_HARMONOGRAMU
 INNER JOIN PR_ZLECENIA_RBH R ON R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI AND R.ID_ZLECENIA = Z.ID_ZLECENIA
 inner join PR_KOMORKI      K ON K.ID_KOMORKI  = Z.ID_KOMORKI
 WHERE R.ROK between :ROK_OD and :ROK_DO AND R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO
 AND ( (:ID_WYDZIALU IS NOT NULL AND K.ID_WYDZIALU = :ID_WYDZIALU) OR   (:ID_WYDZIALU IS NULL AND  K.ID_KOMORKI BETWEEN :ID_KOMORKI_OD AND :ID_KOMORKI_DO) )
 GROUP BY 1, 2 HAVING COUNT(*) > 0
 INTO :IDX_1, :NAGL_1
 DO
 BEGIN
 SUSPEND;
 END
 IDX_2=2;
 FOR select
 ku.pozycja,
 CASE WHEN KU.POZYCJA = '999' THEN 'POZOSTA£E ZADANIA'  ELSE KU.NAZ_REMONTU END,
 m.sygn_mag, m.ID_HARM,  z.ID_HARM, m.ID_MAG, m.ROK, m.DEPOZYT, m.ID_KOMORKI,
 s.NAZWA, s.INDEKS_MAT,   r.KOD_REM, m.NR_FABR, m.NR_REJ, m.ILOSC AS ILOSC_PRZYJ,
 z.LICZBA_RBH as RBH_PLAN,
 (SELECT SUM(ZD.ILOSC) FROM  PR_ZLECENIA_RBH ZD WHERE  ZD.ID_ZLECENIA = Z.ID_ZLECENIA AND ZD.ROK = Z.ROK AND ZD.ID_KOMORKI = Z.ID_KOMORKI AND ZD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO) as ILOSC_REM,
 (SELECT SUM(ZD.LICZBA_RBH) FROM  PR_ZLECENIA_RBH ZD WHERE  ZD.ID_ZLECENIA = Z.ID_ZLECENIA AND ZD.ROK = Z.ROK AND ZD.ID_KOMORKI = Z.ID_KOMORKI AND ZD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO) as RBH_REM,
 j.JW, j.MIEJSCOWOSC, m.DATA_PRZYJ, m.DATA_ZAK,
 (select max(p.DATA_WYST) from pr_powiad p
 inner join PR_POWIAD2MAGAZYN pm on pm.ID_POWIAD = p.ID_POWIAD and pm.ROK_POW = p.ROK and pm.ID_WYDZIALU = p.ID_WYDZIALU
 where pm.DEPOZYT = m.DEPOZYT and pm.ROK = m.ROK and pm.ID_KOMORKI = m.ID_KOMORKI and pm.ID_MAG = m.ID_MAG)  AS DATA_POW,
 (select COUNT(DISTINCT P.ID_POWIAD) from pr_powiad p
 inner join PR_POWIAD2MAGAZYN pm on pm.ID_POWIAD = p.ID_POWIAD and pm.ROK_POW = p.ROK and pm.ID_WYDZIALU = p.ID_WYDZIALU
 where pm.DEPOZYT = m.DEPOZYT and pm.ROK = m.ROK and pm.ID_KOMORKI = m.ID_KOMORKI and pm.ID_MAG = m.ID_MAG)  AS IL_POW,
 z.SYGN_ZLECENIA, m.DATA_PRZEKAZ, z.DATA_ZDA_KUT, m.UWAGI
 from pr_zlecenia z
 left outer join pr_jednostki   j  on j.ID_JEDNOSTKI = z.ID_JEDNOSTKI
 left outer join pr_magazyn     m  on m.DEPOZYT = z.DEPOZYT and m.ROK = z.ROK_MAG and m.ID_KOMORKI = z.ID_KOMORKI_GLW and m.ID_MAG = z.ID_MAG
 left outer join pr_remonty     r  on r.ID_REMONTU = m.ID_REMONTU
 left outer join pr_sprzet      s  on s.ID_SPRZETU = m.ID_SPRZETU
 LEFT OUTER JOIN PR_KOMORKI     K  on k.ID_KOMORKI = z.ID_KOMORKI
 left outer join PR_HARMONOGRAM h  on h.ROK =z.ROK and h.ID_HARMONOGRAMU = z.ID_HARM
 left outer join pr_kody_uslug  ku on ku.ID_USLUGI = h.ID_USLUGI
 WHERE Z.ROK between :ROK_OD and :ROK_DO AND
 ( (:ID_WYDZIALU IS NOT NULL AND K.ID_WYDZIALU = :ID_WYDZIALU) OR  (:ID_WYDZIALU IS NULL AND  K.ID_KOMORKI BETWEEN :ID_KOMORKI_OD AND :ID_KOMORKI_DO)  )
 ORDER BY Z.SYGN_ZLECENIA
 INTO
 :IDX_1,:NAGL_1,:sygn_mag, :ID_HARM, :ID_HARM_Z, :ID_MAG, :ROK_MAG, :DEPOZYT, :ID_KOMORKI_GLW,
 :NAZWA, :INDEKS_MAT, :KOD_REM, :NR_FABR, :NR_REJ, :ILOSC_PRZYJ,:RBH_PLAN,:ILOSC_REM,:RBH_REM,:JW,:MIEJSCOWOSC,:DATA_PRZYJ,:DATA_ZAK, :DATA_POW, :IL_POW,
 :SYGN_ZLECENIA, :DATA_PRZEKAZ, :DATA_ZDA_KUT, :UWAGI
 do
 begin
  SELECT				coalesce(max(m.ILOSC),0) - coalesce(sum(case when r.ROK < :ROK then r.ILOSC else 0 end),0) AS ILOSC from PR_MAGAZYN m
 left join PR_ZLECENIA z on z.ID_MAG = m.ID_MAG and z.ROK_MAG=m.ROK and z.ID_KOMORKI_GLW = m.ID_KOMORKI and z.DEPOZYT = m.DEPOZYT and z.NR_KOL= 0
 left join PR_ZLECENIA_RBH r 																on r.ID_ZLECENIA = z.ID_ZLECENIA and r.ROK = z.ROK and r.ID_KOMORKI = z.ID_KOMORKI
  where
    m.ID_MAG =:ID_MAG and   
    m.ID_KOMORKI = :ID_KOMORKI_GLW and
    m.ROK = :ROK_MAG and
    m.DEPOZYT = :DEPOZYT  
  into :ILOSC_Z;
 SUSPEND;
 end
 end
#C