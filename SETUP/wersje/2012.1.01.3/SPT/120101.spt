CREATE OR ALTER PROCEDURE SP_ROCZNE_DET (IN_ID_WARSZTAT Integer)
returns (IDX_1                      Integer,
         IDX_2                      Integer,
         LP                         Integer,
         ID_KOMORKI                 Integer,
         KOD_WARSZTATU              Varchar(20),
         NAZ_WARSZTATU              Varchar(120),
         POZYCJA                    Varchar(20),
         NAZ_REMONTU                Varchar(120),
         NAZ_SPRZETU                Varchar(120),
         INDEKS_MAT                 Varchar(120),
         PLAN_ILOSC_SPRZETU         Numeric(15,2),
         RODZ_NAPRAWY               Varchar(120),
         PLAN_ILOSC_RBH             Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_I   Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_II  Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_III Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_IV  Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_I   Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_II  Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_III Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_IV  Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_I     Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_II    Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_III   Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_IV    Numeric(15,2),
         ILOSC_SPRZET               Numeric(15,2),
         ILOSC_PLAN                 Numeric(15,2),
         PROC_PLAN                  Numeric(15,4),
         ILOSC_ZAL                  Numeric(15,2),
         PROC_ZAL                   Numeric(15,2),
         UWAGI                      Varchar(100))
AS 
  declare variable locLP Integer;
  declare variable HARM_SUB Integer;
  declare variable ID_HARM Integer;
  declare variable SYGN_ZLECENIA Varchar(60);
  declare variable MAX_MIES Integer;
  declare variable MAX_KW Integer;
  declare variable DATA_ZAK Date;
  declare variable W_REM Char(1);
  declare variable REALIZACJA_RBH Decimal(15,2);
  declare variable SUMA_PLAN Decimal(15,2);
  declare variable PLAN_ILOSC_I Decimal(15,2);
  declare variable PLAN_ILOSC_II Decimal(15,2);
  declare variable PLAN_ILOSC_III Decimal(15,2);
  declare variable PLAN_ILOSC_IV Decimal(15,2);
  declare variable PLAN_ILOSC_CR Decimal(15,2);
  declare variable RBH_Z_PLANU Decimal(15,2);
begin
 /*szczegoly*/
 locLP = 1;
 for SELECT
 (case when ku.pozycja is null then 999 else ku.pozycja end) IDX_1,
 5 IDX_2,
 p.id_harm, 
 p.id_harm - (p.id_harm/1000)*1000 AS HARM_SUB,
 W.ID_KOMORKI, W.KOD AS KOD_WARSZTATU,
 (case when w.ID_KOMORKI is null then 'POZOSTA£E' else W.KOD || ' - ' || W.NAZWA end) as naz_warsztatu,
 (case when ku.pozycja is null then 999 else ku.pozycja end) as pozycja ,
 (case when (ku.pozycja is null OR  ku.pozycja = 999) then 'POZOSTA£E' else ku.naz_remontu end ) as naz_remontu,
 case when s.nazwa is null then '' else s.nazwa end || '   '
 || case when m.NR_REJ is null then '' else m.NR_REJ end || '   '
 || case when m.NR_FABR is null then '' else m.NR_FABR end  as naz_sprzetu,
  Z.SYGN_ZLECENIA,
 CASE WHEN S.INDEKS_MAT IS NULL THEN p.INDEKS_MAT ELSE S.INDEKS_MAT END,
 P.REMONT AS RODZ_NAPRAWY,
 M.ILOSC AS PLAN_ILOSC_SPRZETU,
 Z.LICZBA_RBH   AS PLAN_ILOSC_RBH,
 MAX(R.MIESIAC) AS MAX_MIES,
 SUM(CASE WHEN R.MIESIAC BETWEEN 1  AND 3  THEN R.LICZBA_RBH END) AS REALIZACJA_RBH_KWARTAL_I,
 SUM(CASE WHEN R.MIESIAC BETWEEN 4  AND 6  THEN R.LICZBA_RBH END) AS REALIZACJA_RBH_KWARTAL_II,
 SUM(CASE WHEN R.MIESIAC BETWEEN 7  AND 9  THEN R.LICZBA_RBH END) AS REALIZACJA_RBH_KWARTAL_III,
 SUM(CASE WHEN R.MIESIAC BETWEEN 10 AND 12 THEN R.LICZBA_RBH END) AS REALIZACJA_RBH_KWARTAL_IV,
 Z.DATA_ZAK,
 null AS ILOSC_PLAN,
 null AS PROC_PLAN,
 null AS ILOSC_ZAL,
 null AS PROC_ZAL,
 NULL AS UWAGI,
 P.KWARTAL_I AS PLAN_ILOSC_I,
 P.KWARTAL_II AS PLAN_ILOSC_II,
 P.KWARTAL_III AS PLAN_ILOSC_III,
 P.KWARTAL_IV AS PLAN_ILOSC_IV,
 P.ILOSC AS PLAN_ILOSC_CR,
 P.PLAN_RBH AS RBH_Z_PLANU
 FROM pr_zlecenia z
 left outer join PR_KOMORKI     w  on w.ID_KOMORKI = z.ID_KOMORKI
 left outer join pr_plan          p  on p.ID_HARM      = z.ID_HARM
 left outer join pr_kody_uslug    ku on ku.ID_USLUGI   = p.ID_USLUGI
 left outer join pr_magazyn       m  on m.ID_MAG       = z.ID_MAG  AND M.ID_KOMORKI = Z.ID_KOMORKI_GLW AND M.DEPOZYT =Z.DEPOZYT AND M.ROK =Z.ROK_MAG
 left outer join pr_sprzet        s  on s.ID_SPRZETU   = m.ID_SPRZETU
 left outer join pr_zlecenia_rbh  r  on r.ID_ZLECENIA  = z.ID_ZLECENIA  AND R.ID_KOMORKI = Z.ID_KOMORKI AND R.ROK = Z.ROK
 left outer join pr_jednostki     j  on j.ID_JEDNOSTKI = z.ID_JEDNOSTKI
 left outer join pr_remonty       re on re.ID_REMONTU  = m.id_remontu
 where  z.NR_KOL =0 and    (-1=:IN_ID_WARSZTAT or W.ID_KOMORKI = :IN_ID_WARSZTAT)
 group by
 w.ID_KOMORKI, w.KOD, w.NAZWA,  ku.POZYCJA, ku.NAZ_REMONTU,   s.NAZWA,S.INDEKS_MAT, Z.SYGN_ZLECENIA, p.ID_HARM,  p.ZADANIE,  m.NR_REJ,  m.NR_FABR,
 M.ILOSC,p.KWARTAL_I, p.KWARTAL_II, p.KWARTAL_III, p.KWARTAL_IV, P.INDEKS_MAT, P.ILOSC, P.PLAN_RBH,
 M.ILOSC,P.REMONT,M.ILOSC,P.PLAN_RBH,Z.DATA_ZAK,Z.LICZBA_RBH
 ORDER BY 
  case when W.ID_KOMORKI is null then 999 else W.KOD end,  
  case when ku.pozycja     is null then 999      else ku.POZYCJA end,  
  s.nazwa, 
  z.SYGN_ZLECENIA
 into
 :IDX_1,
 :IDX_2,
 :ID_HARM,
 :HARM_SUB,
 :ID_KOMORKI ,
 :KOD_WARSZTATU ,
 :naz_warsztatu  ,
 :pozycja  ,
 :naz_remontu  ,
 :naz_sprzetu ,
 :SYGN_ZLECENIA,
 :INDEKS_MAT  ,
 :RODZ_NAPRAWY  ,
 :PLAN_ILOSC_SPRZETU,
 :PLAN_ILOSC_RBH ,
 :MAX_MIES,
 :REALIZACJA_RBH_KWARTAL_I ,
 :REALIZACJA_RBH_KWARTAL_II ,
 :REALIZACJA_RBH_KWARTAL_III,
 :REALIZACJA_RBH_KWARTAL_IV,
 :DATA_ZAK,
 :ILOSC_PLAN ,
 :PROC_PLAN ,
 :ILOSC_ZAL,
 :PROC_ZAL,
 :UWAGI,
 :PLAN_ILOSC_I,
 :PLAN_ILOSC_II,
 :PLAN_ILOSC_III,
 :PLAN_ILOSC_IV,
 :PLAN_ILOSC_CR,
 :RBH_Z_PLANU
 do
 begin
 LP = locLP;
 locLP = locLP + 1;
 /*ZMIENNE POMOCNICZE*/
  IF(MAX_MIES IS NULL) THEN MAX_MIES = 0;
  MAX_KW = CASE 
           WHEN MAX_MIES =0                THEN 0  
           WHEN MAX_MIES BETWEEN 1  AND 3  THEN 1  
           WHEN MAX_MIES BETWEEN 4  AND 6  THEN 2  
           WHEN MAX_MIES BETWEEN 7  AND 9  THEN 3  
           WHEN MAX_MIES BETWEEN 10 AND 12 THEN 4 
          END;
  W_REM = CASE WHEN DATA_ZAK IS NULL OR DATA_ZAK <='1900-01-01' THEN 'T' ELSE 'N' END;           
/*GODZINY ZREAIZOWANE*/  
  IF( REALIZACJA_RBH_KWARTAL_I   IS NULL ) THEN REALIZACJA_RBH_KWARTAL_I     = 0.0;  
  IF( REALIZACJA_RBH_KWARTAL_II  IS NULL ) THEN REALIZACJA_RBH_KWARTAL_II    = 0.0;  
  IF( REALIZACJA_RBH_KWARTAL_III IS NULL ) THEN REALIZACJA_RBH_KWARTAL_III   = 0.0;  
  IF( REALIZACJA_RBH_KWARTAL_IV  IS NULL ) THEN REALIZACJA_RBH_KWARTAL_IV    = 0.0;  
  REALIZACJA_RBH = REALIZACJA_RBH_KWARTAL_I + REALIZACJA_RBH_KWARTAL_II + REALIZACJA_RBH_KWARTAL_III + REALIZACJA_RBH_KWARTAL_IV; 
/*GODZINY PLANOWANE*/  
  PLAN_ILOSC_RBH_KWARTAL_I   = CASE WHEN MAX_KW > 1 THEN REALIZACJA_RBH_KWARTAL_I   WHEN MAX_KW =1 THEN PLAN_ILOSC_RBH ELSE 0.0 END;
  IF( PLAN_ILOSC_RBH_KWARTAL_I   IS NULL) THEN PLAN_ILOSC_RBH_KWARTAL_I   = 0.0;        
  PLAN_ILOSC_RBH_KWARTAL_II  = CASE WHEN MAX_KW > 2 THEN REALIZACJA_RBH_KWARTAL_II  WHEN MAX_KW =2 THEN PLAN_ILOSC_RBH -PLAN_ILOSC_RBH_KWARTAL_I ELSE 0.0 END;
  IF( PLAN_ILOSC_RBH_KWARTAL_II  IS NULL) THEN PLAN_ILOSC_RBH_KWARTAL_II  = 0.0;        
  PLAN_ILOSC_RBH_KWARTAL_III = CASE WHEN MAX_KW > 3 THEN REALIZACJA_RBH_KWARTAL_III WHEN MAX_KW =3 THEN PLAN_ILOSC_RBH -PLAN_ILOSC_RBH_KWARTAL_I -PLAN_ILOSC_RBH_KWARTAL_II ELSE 0.0 END;
  IF( PLAN_ILOSC_RBH_KWARTAL_III IS NULL) THEN PLAN_ILOSC_RBH_KWARTAL_III = 0.0;        
  PLAN_ILOSC_RBH_KWARTAL_IV  = CASE WHEN MAX_KW = 4 THEN PLAN_ILOSC_RBH -PLAN_ILOSC_RBH_KWARTAL_I -PLAN_ILOSC_RBH_KWARTAL_II - PLAN_ILOSC_RBH_KWARTAL_III ELSE 0.0 END;
  IF( PLAN_ILOSC_RBH_KWARTAL_IV  IS NULL) THEN PLAN_ILOSC_RBH_KWARTAL_IV  = 0.0;
  SUMA_PLAN = PLAN_ILOSC_RBH_KWARTAL_I + PLAN_ILOSC_RBH_KWARTAL_II + PLAN_ILOSC_RBH_KWARTAL_III + PLAN_ILOSC_RBH_KWARTAL_IV; 
  IF(SUMA_PLAN =0.0) THEN
  BEGIN
       IF(PLAN_ILOSC_RBH IS NULL AND PLAN_ILOSC_SPRZETU = PLAN_ILOSC_CR) THEN 
       BEGIN 
             PLAN_ILOSC_RBH = PLAN_ILOSC_CR * RBH_Z_PLANU;  
             IF( PLAN_ILOSC_IV  IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_IV  = PLAN_ILOSC_IV; 
             ELSE IF( PLAN_ILOSC_III IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_III = PLAN_ILOSC_III; 
             ELSE IF( PLAN_ILOSC_II  IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_II  = PLAN_ILOSC_II; 
             ELSE IF( PLAN_ILOSC_I   IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_I   = PLAN_ILOSC_I;
       END
       ELSE
       BEGIN  
             IF( PLAN_ILOSC_IV  IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_IV  = PLAN_ILOSC_RBH; 
             ELSE IF( PLAN_ILOSC_III IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_III = PLAN_ILOSC_RBH; 
             ELSE IF( PLAN_ILOSC_II  IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_II  = PLAN_ILOSC_RBH; 
             ELSE IF( PLAN_ILOSC_I   IS NOT NULL) THEN  PLAN_ILOSC_RBH_KWARTAL_I   = PLAN_ILOSC_RBH;
       END       
  END
 /*ILOSC WYREMONTOWANEGO SPRZETU*/
  ILOSC_SPRZET_KWARTAL_I  = cast(case when PLAN_ILOSC_RBH = 0 then 0 else REALIZACJA_RBH_KWARTAL_I * PLAN_ILOSC_SPRZETU / PLAN_ILOSC_RBH end as DECIMAL(15,2) ); 
  ILOSC_SPRZET_KWARTAL_I   = CASE 
                                  WHEN MAX_KW > 1 OR W_REM = 'T' THEN ILOSC_SPRZET_KWARTAL_I   
                                  WHEN MAX_KW = 1 THEN PLAN_ILOSC_SPRZETU 
                                  ELSE 0.0 
                             END;
  IF( ILOSC_SPRZET_KWARTAL_I   IS NULL) THEN ILOSC_SPRZET_KWARTAL_I   = 0.0;        
  ILOSC_SPRZET_KWARTAL_II  = cast(case when PLAN_ILOSC_RBH = 0 then 0 else REALIZACJA_RBH_KWARTAL_II * PLAN_ILOSC_SPRZETU / PLAN_ILOSC_RBH end as DECIMAL(15,2) ); 
  ILOSC_SPRZET_KWARTAL_II   = CASE 
                                  WHEN MAX_KW > 2 OR W_REM = 'T' THEN ILOSC_SPRZET_KWARTAL_II   
                                  WHEN MAX_KW = 2 THEN PLAN_ILOSC_SPRZETU - ILOSC_SPRZET_KWARTAL_I
                                  ELSE 0.0 
                             END;
  IF( ILOSC_SPRZET_KWARTAL_II  IS NULL) THEN ILOSC_SPRZET_KWARTAL_II  = 0.0;        
  ILOSC_SPRZET_KWARTAL_III  = cast(case when PLAN_ILOSC_RBH = 0 then 0 else REALIZACJA_RBH_KWARTAL_III * PLAN_ILOSC_SPRZETU / PLAN_ILOSC_RBH end as DECIMAL(15,2) ); 
  ILOSC_SPRZET_KWARTAL_III   = CASE 
                                  WHEN MAX_KW > 3 OR W_REM = 'T' THEN ILOSC_SPRZET_KWARTAL_III   
                                  WHEN MAX_KW = 3 THEN PLAN_ILOSC_SPRZETU  - ILOSC_SPRZET_KWARTAL_I - ILOSC_SPRZET_KWARTAL_II
                                  ELSE 0.0 
                             END;
  IF( ILOSC_SPRZET_KWARTAL_III IS NULL) THEN ILOSC_SPRZET_KWARTAL_III = 0.0;        
  ILOSC_SPRZET_KWARTAL_IV  = cast(case when PLAN_ILOSC_RBH = 0 then 0 else REALIZACJA_RBH_KWARTAL_IV * PLAN_ILOSC_SPRZETU / PLAN_ILOSC_RBH end as DECIMAL(15,2) ); 
  ILOSC_SPRZET_KWARTAL_IV   = CASE 
                                  WHEN W_REM = 'T' THEN ILOSC_SPRZET_KWARTAL_IV   
                                  WHEN MAX_KW =4 THEN PLAN_ILOSC_SPRZETU  - ILOSC_SPRZET_KWARTAL_I - ILOSC_SPRZET_KWARTAL_II -  ILOSC_SPRZET_KWARTAL_III
                                  ELSE 0.0 
                             END;
  IF( ILOSC_SPRZET_KWARTAL_IV  IS NULL) THEN ILOSC_SPRZET_KWARTAL_IV  = 0.0;        
  ILOSC_SPRZET =  ILOSC_SPRZET_KWARTAL_I  +ILOSC_SPRZET_KWARTAL_II  + ILOSC_SPRZET_KWARTAL_III  + ILOSC_SPRZET_KWARTAL_IV; 
  IF(ILOSC_SPRZET =0.0 AND W_REM ='N' ) THEN ILOSC_SPRZET =  PLAN_ILOSC_SPRZETU;
 /*ZALEGLOSCI*/
  IF(W_REM ='T') THEN
  BEGIN
  ILOSC_ZAL = PLAN_ILOSC_SPRZETU - ILOSC_SPRZET;
  PROC_ZAL  = 100*ILOSC_SPRZET/PLAN_ILOSC_SPRZETU; 
  END 
 /*UWAGI*/ 
   uwagi =SYGN_ZLECENIA /*||'<BR>'|| CASE WHEN maX_kw IS NULL THEN 'BRAK MAX_KW' ELSE MAX_KW  END ||'<BR>'|| CASE WHEN W_REM IS NULL THEN 'BRAK W_REM' ELSE W_REM END*/; 
 /*ZEROWE WARTOCI NA NULL*/
  IF( ILOSC_SPRZET_KWARTAL_I     =0.0) THEN ILOSC_SPRZET_KWARTAL_I     = NULL;       
  IF( ILOSC_SPRZET_KWARTAL_II    =0.0) THEN ILOSC_SPRZET_KWARTAL_II    = NULL;       
  IF( ILOSC_SPRZET_KWARTAL_III   =0.0) THEN ILOSC_SPRZET_KWARTAL_III   = NULL;     
  IF( ILOSC_SPRZET_KWARTAL_IV    =0.0) THEN ILOSC_SPRZET_KWARTAL_IV    = NULL;       
  IF( ILOSC_SPRZET               =0.0) THEN ILOSC_SPRZET               = NULL;       
  IF( PLAN_ILOSC_RBH_KWARTAL_I   =0.0) THEN PLAN_ILOSC_RBH_KWARTAL_I   = NULL;       
  IF( PLAN_ILOSC_RBH_KWARTAL_II  =0.0) THEN PLAN_ILOSC_RBH_KWARTAL_II  = NULL;       
  IF( PLAN_ILOSC_RBH_KWARTAL_III =0.0) THEN PLAN_ILOSC_RBH_KWARTAL_III = NULL;     
  IF( PLAN_ILOSC_RBH_KWARTAL_IV  =0.0) THEN PLAN_ILOSC_RBH_KWARTAL_IV  = NULL;    
  IF( REALIZACJA_RBH_KWARTAL_I   =0.0) THEN REALIZACJA_RBH_KWARTAL_I   = NULL;
  IF( REALIZACJA_RBH_KWARTAL_II  =0.0) THEN REALIZACJA_RBH_KWARTAL_II  = NULL;
  IF( REALIZACJA_RBH_KWARTAL_III =0.0) THEN REALIZACJA_RBH_KWARTAL_III = NULL;
  IF( REALIZACJA_RBH_KWARTAL_IV  =0.0) THEN REALIZACJA_RBH_KWARTAL_IV  = NULL;
  IF( ILOSC_ZAL  =0.0)                 THEN ILOSC_ZAL                  = NULL;
  IF( ILOSC_ZAL IS NULL)               THEN PROC_ZAL                   = NULL;
  
 suspend;
 end
end
#C

CREATE OR ALTER PROCEDURE SP_ROCZNE (IN_ID_WARSZTAT Integer)
returns (IDX_1                      Integer,
         IDX_2                      Integer,
         LP                         Integer,
         ID_KOMORKI                 Integer,
         KOD_WARSZTATU              Varchar(20),
         NAZ_WARSZTATU              Varchar(120),
         POZYCJA                    Varchar(20),
         NAZ_REMONTU                Varchar(120),
         NAZ_SPRZETU                Varchar(120),
         INDEKS_MAT                 Varchar(120),
         PLAN_ILOSC_SPRZETU         Numeric(15,2),
         RODZ_NAPRAWY               Varchar(120),
         PLAN_ILOSC_RBH             Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_I   Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_II  Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_III Numeric(15,2),
         PLAN_ILOSC_RBH_KWARTAL_IV  Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_I   Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_II  Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_III Numeric(15,2),
         REALIZACJA_RBH_KWARTAL_IV  Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_I     Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_II    Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_III   Numeric(15,2),
         ILOSC_SPRZET_KWARTAL_IV    Numeric(15,2),
         ILOSC_SPRZET               Numeric(15,2),
         ILOSC_PLAN                 Numeric(15,2),
         PROC_PLAN                  Numeric(15,4),
         ILOSC_ZAL                  Numeric(15,2),
         PROC_ZAL                   Numeric(15,2),
         UWAGI                      Varchar(100))
AS 
  declare variable locLP Integer;
  declare variable HARM_SUB Integer;
  declare variable ID_HARM Integer;
  declare variable SYGN_ZLECENIA Varchar(60);
  declare variable MAX_MIES Integer;
  declare variable MAX_KW Integer;
  declare variable DATA_ZAK Date;
  declare variable W_REM Char(1);
  declare variable REALIZACJA_RBH Decimal(15,2);
begin
 /*naglowki
 for
 select pozycja ,
 1,
 MAX((case when (pozycja is null OR  pozycja = 999) then 'POZOSTA£E' else naz_remontu end )) as naz_remontu
 from PR_KODY_USLUG
 group by pozycja
 into :IDX_1,:IDX_2,:naz_remontu
 do suspend;   */
 for SELECT distinct
 (case when ku.pozycja is null then 999 else ku.pozycja end) IDX_1,
 1 IDX_2,
 W.ID_KOMORKI, W.KOD AS KOD_WARSZTATU,
 null as naz_warsztatu,
 (case when ku.pozycja is null then 999 else ku.pozycja end) as pozycja ,
 (case when (ku.pozycja is null OR  ku.pozycja = 999) then 'POZOSTA£E' else ku.naz_remontu end ) as naz_remontu,
 null  as naz_sprzetu,
 null INDEKS_MAT,
 null AS PLAN_ILOSC_SPRZETU,
 null AS RODZ_NAPRAWY,
 null AS PLAN_ILOSC_RBH,
 null AS PLAN_ILOSC_RBH_KWARTAL_I,
 null AS PLAN_ILOSC_RBH_KWARTAL_II,
 null AS PLAN_ILOSC_RBH_KWARTAL_III,
 null AS PLAN_ILOSC_RBH_KWARTAL_IV,
 null AS REALIZACJA_RBH_KWARTAL_I,
 null AS REALIZACJA_RBH_KWARTAL_II,
 null AS REALIZACJA_RBH_KWARTAL_III,
 null AS REALIZACJA_RBH_KWARTAL_IV,
 null AS ILOSC_SPRZET_KWARTAL_I,
 null AS ILOSC_SPRZET_KWARTAL_II,
 null AS ILOSC_SPRZET_KWARTAL_III,
 null AS ILOSC_SPRZET_KWARTAL_IV,
 null AS ILOSC_SPRZET,
 null AS ILOSC_PLAN,
 null AS PROC_PLAN,
 null AS ILOSC_ZAL,
 null AS PROC_ZAL,
 NULL AS UWAGI
 FROM pr_zlecenia z
 left outer join PR_KOMORKI     w  on w.ID_KOMORKI = z.ID_KOMORKI
 left outer join pr_plan          p  on p.ID_HARM      = z.ID_HARM
 left outer join pr_kody_uslug    ku on ku.ID_USLUGI   = p.ID_USLUGI
 left outer join pr_magazyn       m  on m.ID_MAG       = z.ID_MAG  AND M.ID_KOMORKI = Z.ID_KOMORKI_GLW AND M.DEPOZYT =Z.DEPOZYT AND M.ROK =Z.ROK_MAG
 left outer join pr_sprzet        s  on s.ID_SPRZETU   = m.ID_SPRZETU
 left outer join pr_zlecenia_rbh  r  on r.ID_ZLECENIA  = z.ID_ZLECENIA  AND R.ID_KOMORKI = Z.ID_KOMORKI AND R.ROK = Z.ROK
 left outer join pr_jednostki     j  on j.ID_JEDNOSTKI = z.ID_JEDNOSTKI
 left outer join pr_remonty       re on re.ID_REMONTU  = m.id_remontu
 where     (-1=:IN_ID_WARSZTAT or W.ID_KOMORKI = :IN_ID_WARSZTAT)
 into
 :IDX_1,
 :IDX_2,
 :ID_KOMORKI ,
 :KOD_WARSZTATU ,
 :naz_warsztatu  ,
 :pozycja  ,
 :naz_remontu  ,
 :naz_sprzetu ,
 :INDEKS_MAT  ,
 :PLAN_ILOSC_SPRZETU,
 :RODZ_NAPRAWY  ,
 :PLAN_ILOSC_RBH ,
 :PLAN_ILOSC_RBH_KWARTAL_I ,
 :PLAN_ILOSC_RBH_KWARTAL_II ,
 :PLAN_ILOSC_RBH_KWARTAL_III,
 :PLAN_ILOSC_RBH_KWARTAL_IV,
 :REALIZACJA_RBH_KWARTAL_I ,
 :REALIZACJA_RBH_KWARTAL_II ,
 :REALIZACJA_RBH_KWARTAL_III,
 :REALIZACJA_RBH_KWARTAL_IV,
 :ILOSC_SPRZET_KWARTAL_I ,
 :ILOSC_SPRZET_KWARTAL_II ,
 :ILOSC_SPRZET_KWARTAL_III ,
 :ILOSC_SPRZET_KWARTAL_IV  ,
 :ILOSC_SPRZET,
 :ILOSC_PLAN ,
 :PROC_PLAN ,
 :ILOSC_ZAL,
 :PROC_ZAL,
 :UWAGI
 do
 begin
 suspend;
 end
 /*razem*/
 for SELECT 
 IDX_1, 10 AS IDX_2, 
 NULL AS LP, 
 NULL ID_KOMORKI, KOD_WARSZTATU, 
 NULL NAZ_WARSZTATU, 
 POZYCJA, 
 NULL AS NAZ_REMONTU, 
 NULL AS NAZ_SPRZETU, 
 NULL AS INDEKS_MAT, 
 SUM(PLAN_ILOSC_SPRZETU), 
 NULL AS RODZ_NAPRAWY,
 SUM(PLAN_ILOSC_RBH), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_I), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_II), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_III), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_IV), 
 SUM(REALIZACJA_RBH_KWARTAL_I), 
 SUM(REALIZACJA_RBH_KWARTAL_II), 
 SUM(REALIZACJA_RBH_KWARTAL_III), 
 SUM(REALIZACJA_RBH_KWARTAL_IV), 
 SUM(ILOSC_SPRZET_KWARTAL_I), 
 SUM(ILOSC_SPRZET_KWARTAL_II), 
 SUM( ILOSC_SPRZET_KWARTAL_III), 
 SUM( ILOSC_SPRZET_KWARTAL_IV), 
 SUM( ILOSC_SPRZET), 
 SUM(ILOSC_PLAN), 
 NULL AS PROC_PLAN, 
 NULL AS ILOSC_ZAL, 
 NULL AS PROC_ZAL, 
 NULL AS UWAGI
from SP_ROCZNE_DET(:IN_ID_WARSZTAT)  group by IDX_1,ID_KOMORKI, KOD_WARSZTATU, POZYCJA
 into
 :IDX_1,
 :IDX_2,
 :LP,
 :ID_KOMORKI ,
 :KOD_WARSZTATU ,
 :naz_warsztatu  ,
 :pozycja  ,
 :naz_remontu  ,
 :naz_sprzetu ,
 :INDEKS_MAT  ,
 :PLAN_ILOSC_SPRZETU,
 :RODZ_NAPRAWY  ,
 :PLAN_ILOSC_RBH ,
 :PLAN_ILOSC_RBH_KWARTAL_I ,
 :PLAN_ILOSC_RBH_KWARTAL_II ,
 :PLAN_ILOSC_RBH_KWARTAL_III,
 :PLAN_ILOSC_RBH_KWARTAL_IV,
 :REALIZACJA_RBH_KWARTAL_I ,
 :REALIZACJA_RBH_KWARTAL_II ,
 :REALIZACJA_RBH_KWARTAL_III,
 :REALIZACJA_RBH_KWARTAL_IV,
 :ILOSC_SPRZET_KWARTAL_I ,
 :ILOSC_SPRZET_KWARTAL_II ,
 :ILOSC_SPRZET_KWARTAL_III ,
 :ILOSC_SPRZET_KWARTAL_IV  ,
 :ILOSC_SPRZET,
 :ILOSC_PLAN ,
 :PROC_PLAN ,
 :ILOSC_ZAL,
 :PROC_ZAL,
 :UWAGI
 do
 begin
 suspend;
 end
 /*OGOLEM*/
 for SELECT 
 99999 IDX_1,
  99 AS IDX_2, 
 NULL AS LP, 
 NULL ID_KOMORKI, KOD_WARSZTATU, 
 NULL NAZ_WARSZTATU, 
 NULL AS POZYCJA, 
 NULL AS NAZ_REMONTU, 
 NULL AS NAZ_SPRZETU, 
 NULL AS INDEKS_MAT, 
 SUM(PLAN_ILOSC_SPRZETU), 
 NULL AS RODZ_NAPRAWY,
 SUM(PLAN_ILOSC_RBH), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_I), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_II), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_III), 
 SUM(PLAN_ILOSC_RBH_KWARTAL_IV), 
 SUM(REALIZACJA_RBH_KWARTAL_I), 
 SUM(REALIZACJA_RBH_KWARTAL_II), 
 SUM(REALIZACJA_RBH_KWARTAL_III), 
 SUM(REALIZACJA_RBH_KWARTAL_IV), 
 SUM(ILOSC_SPRZET_KWARTAL_I), 
 SUM(ILOSC_SPRZET_KWARTAL_II), 
 SUM( ILOSC_SPRZET_KWARTAL_III), 
 SUM( ILOSC_SPRZET_KWARTAL_IV), 
 SUM( ILOSC_SPRZET), 
 SUM(ILOSC_PLAN), 
 NULL AS PROC_PLAN, 
 NULL AS ILOSC_ZAL, 
 NULL AS PROC_ZAL, 
 NULL AS UWAGI
from SP_ROCZNE_DET(:IN_ID_WARSZTAT)  group by IDX_1,ID_KOMORKI, KOD_WARSZTATU
 into
 :IDX_1,
 :IDX_2,
 :LP,
 :ID_KOMORKI ,
 :KOD_WARSZTATU ,
 :naz_warsztatu  ,
 :pozycja  ,
 :naz_remontu  ,
 :naz_sprzetu ,
 :INDEKS_MAT  ,
 :PLAN_ILOSC_SPRZETU,
 :RODZ_NAPRAWY  ,
 :PLAN_ILOSC_RBH ,
 :PLAN_ILOSC_RBH_KWARTAL_I ,
 :PLAN_ILOSC_RBH_KWARTAL_II ,
 :PLAN_ILOSC_RBH_KWARTAL_III,
 :PLAN_ILOSC_RBH_KWARTAL_IV,
 :REALIZACJA_RBH_KWARTAL_I ,
 :REALIZACJA_RBH_KWARTAL_II ,
 :REALIZACJA_RBH_KWARTAL_III,
 :REALIZACJA_RBH_KWARTAL_IV,
 :ILOSC_SPRZET_KWARTAL_I ,
 :ILOSC_SPRZET_KWARTAL_II ,
 :ILOSC_SPRZET_KWARTAL_III ,
 :ILOSC_SPRZET_KWARTAL_IV  ,
 :ILOSC_SPRZET,
 :ILOSC_PLAN ,
 :PROC_PLAN ,
 :ILOSC_ZAL,
 :PROC_ZAL,
 :UWAGI
 do
 begin
 suspend;
 end
 /*szczegoly*/
 locLP = 1;
 for SELECT
 IDX_1, IDX_2, LP, ID_KOMORKI, KOD_WARSZTATU, NAZ_WARSZTATU, POZYCJA, NAZ_REMONTU, NAZ_SPRZETU, INDEKS_MAT, 
 PLAN_ILOSC_SPRZETU, RODZ_NAPRAWY, PLAN_ILOSC_RBH, PLAN_ILOSC_RBH_KWARTAL_I, PLAN_ILOSC_RBH_KWARTAL_II, 
 PLAN_ILOSC_RBH_KWARTAL_III, PLAN_ILOSC_RBH_KWARTAL_IV, REALIZACJA_RBH_KWARTAL_I, REALIZACJA_RBH_KWARTAL_II, 
 REALIZACJA_RBH_KWARTAL_III, REALIZACJA_RBH_KWARTAL_IV, ILOSC_SPRZET_KWARTAL_I, ILOSC_SPRZET_KWARTAL_II, 
 ILOSC_SPRZET_KWARTAL_III, ILOSC_SPRZET_KWARTAL_IV, ILOSC_SPRZET, ILOSC_PLAN, PROC_PLAN, ILOSC_ZAL, PROC_ZAL, UWAGI
 from SP_ROCZNE_DET(:IN_ID_WARSZTAT)
 into
 :IDX_1,
 :IDX_2,
 :LP,
 :ID_KOMORKI ,
 :KOD_WARSZTATU ,
 :naz_warsztatu  ,
 :pozycja  ,
 :naz_remontu  ,
 :naz_sprzetu ,
 :INDEKS_MAT  ,
 :PLAN_ILOSC_SPRZETU,
 :RODZ_NAPRAWY  ,
 :PLAN_ILOSC_RBH ,
 :PLAN_ILOSC_RBH_KWARTAL_I ,
 :PLAN_ILOSC_RBH_KWARTAL_II ,
 :PLAN_ILOSC_RBH_KWARTAL_III,
 :PLAN_ILOSC_RBH_KWARTAL_IV,
 :REALIZACJA_RBH_KWARTAL_I ,
 :REALIZACJA_RBH_KWARTAL_II ,
 :REALIZACJA_RBH_KWARTAL_III,
 :REALIZACJA_RBH_KWARTAL_IV,
 :ILOSC_SPRZET_KWARTAL_I ,
 :ILOSC_SPRZET_KWARTAL_II ,
 :ILOSC_SPRZET_KWARTAL_III ,
 :ILOSC_SPRZET_KWARTAL_IV  ,
 :ILOSC_SPRZET,
 :ILOSC_PLAN ,
 :PROC_PLAN ,
 :ILOSC_ZAL,
 :PROC_ZAL,
 :UWAGI
 do
 begin
 suspend;
 end
end
#C