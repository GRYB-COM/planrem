delete from pr_zlecenia z where not exists (select null from pr_magazyn m where m.ROK = z.ROK_MAG and m.ID_KOMORKI = z.ID_KOMORKI_GLW and m.DEPOZYT = z.DEPOZYT and m.ID_MAG = z.ID_MAG)
#C

ALTER TABLE PR_ZLECENIA ADD TEMP$$NR_MAG Varchar(11)
#TRY

UPDATE PR_ZLECENIA    SET    TEMP$$NR_MAG=NR_MAG
#C

ALTER TABLE PR_ZLECENIA DROP NR_MAG
#TRY

ALTER TABLE PR_ZLECENIA   ALTER COLUMN TEMP$$NR_MAG TO SYGN_MAG
#TRY

ALTER TABLE PR_ZLECENIA add NR_MAG Integer NOT NULL
#TRY

UPDATE pr_zlecenia Z SET NR_MAG = (select NR_MAG from pr_magazyn m where m.ROK = z.ROK_MAG and m.ID_KOMORKI = z.ID_KOMORKI_GLW and m.DEPOZYT = z.DEPOZYT and m.ID_MAG = z.ID_MAG)
#C

CREATE INDEX PR_ZLECENIA_IDX_NR_MAG ON PR_ZLECENIA(ROK_MAG,ID_KOMORKI_GLW,DEPOZYT,NR_MAG)
#TRY

CREATE OR ALTER PROCEDURE PR_ADD2MAGAZYN (SYGN_MAG      Varchar(50),
       DEPOZYT       Char(1),
       ID_MAG        Integer,
       ID_SPRZETU    Integer,
       ID_HARM       Integer,
       ILOSC         Numeric(15,2),
       UWAGI         Varchar(200),
       DATA_PRZEKAZ  Date,
       STATUS        Char(1),
       DATA_PRZYJ    Date,
       NR_FABR       Varchar(60),
       PODSTAWA      Varchar(200),
       ID_JEDNOSTKI  Integer,
       ID_REMONTU    Integer,
       NR_HARM       Integer,
       KOD_WARSZTATU Varchar(5),
       ROK           Integer,
       NR_REJ        Varchar(60),
       GLOWNY_KUT    Varchar(60),
       ID_KOMORKI    Integer,
       NR_MAG        Integer,
       PROT_PRZEKAZ  Varchar(200),
       PROT_PRZYJ    Varchar(200),
       DATA_PROP_ZAK Date,
       DATA_ZAK      Date,
       GLOWNY        Char(1))
AS 
  declare variable COUNTER Integer;
  declare variable ID_MAG_LOC Integer;
begin
 select coalesce(count(*),0) from pr_magazyn m where m.ROK = :ROK and m.ID_KOMORKI = :ID_KOMORKI and M.DEPOZYT = :DEPOZYT AND M.NR_MAG = :NR_MAG  INTO :COUNTER;
 IF(COUNTER >1) THEN EXCEPTION PR_BAD_NR_MAG;
 IF(GLOWNY = 'T')  THEN
 BEGIN
       IF(COUNTER =1) THEN   select ID_MAG from pr_magazyn m where m.ROK = :ROK and m.ID_KOMORKI = :ID_KOMORKI and M.DEPOZYT = :DEPOZYT AND M.NR_MAG = :NR_MAG  INTO :ID_MAG;
       ELSE
       BEGIN
            select ID_MAG from pr_magazyn m where m.ROK = :ROK and m.ID_KOMORKI = :ID_KOMORKI and M.DEPOZYT = :DEPOZYT AND M.ID_MAG = :ID_MAG  INTO :ID_MAG_LOC;
            IF(ID_MAG_LOC IS NOT NULL OR ID_MAG_LOC > 0) THEN ID_MAG = GEN_ID(PR_MAGAZYN_GEN,1);
       END
       UPDATE OR INSERT INTO
       PR_MAGAZYN(DEPOZYT, SYGN_MAG, ID_MAG, ID_SPRZETU, ID_HARM, UWAGI, ILOSC, DATA_PRZEKAZ, STATUS, DATA_PRZYJ, NR_FABR, PODSTAWA, ID_JEDNOSTKI, NR_HARM, ID_REMONTU,
       KOD_WARSZTATU, NR_REJ, ROK, GLOWNY_KUT, ID_KOMORKI, NR_MAG, PROT_PRZEKAZ, PROT_PRZYJ, DATA_PROP_ZAK, DATA_ZAK)
       VALUES(:DEPOZYT, :SYGN_MAG, :ID_MAG, :ID_SPRZETU, :ID_HARM, :UWAGI, :ILOSC, :DATA_PRZEKAZ, :STATUS, :DATA_PRZYJ, :NR_FABR, :PODSTAWA, :ID_JEDNOSTKI, :NR_HARM, :ID_REMONTU,
       :KOD_WARSZTATU, :NR_REJ, :ROK, :GLOWNY_KUT, :ID_KOMORKI, :NR_MAG, :PROT_PRZEKAZ, :PROT_PRZYJ, :DATA_PROP_ZAK, :DATA_ZAK);
            
 END
 ELSE IF(COUNTER = 0) THEN
 BEGIN
       INSERT INTO
       PR_MAGAZYN(DEPOZYT, SYGN_MAG, ID_MAG, ID_SPRZETU, ID_HARM, UWAGI, ILOSC, DATA_PRZEKAZ, STATUS, DATA_PRZYJ, NR_FABR, PODSTAWA, ID_JEDNOSTKI, NR_HARM, ID_REMONTU,
       KOD_WARSZTATU, NR_REJ, ROK, GLOWNY_KUT, ID_KOMORKI, NR_MAG, PROT_PRZEKAZ, PROT_PRZYJ, DATA_PROP_ZAK, DATA_ZAK)
       VALUES(:DEPOZYT, :SYGN_MAG, GEN_ID(PR_MAGAZYN_GEN,1), :ID_SPRZETU, :ID_HARM, :UWAGI, :ILOSC, :DATA_PRZEKAZ, :STATUS, :DATA_PRZYJ, :NR_FABR, :PODSTAWA, :ID_JEDNOSTKI, :NR_HARM, :ID_REMONTU,
       :KOD_WARSZTATU, :NR_REJ, :ROK, :GLOWNY_KUT, :ID_KOMORKI, :NR_MAG, :PROT_PRZEKAZ, :PROT_PRZYJ, :DATA_PROP_ZAK, :DATA_ZAK);

 END
end
#C

CREATE EXCEPTION PR_NO_NR_MAG 'Nie ma numeru magazynowego'
#TRY

CREATE OR ALTER PROCEDURE PR_ADD2ZLECENIA (ID_ZLECENIA    Integer,
       SYGN_ZLECENIA  Varchar(60),
       ID_KOD_U       Integer,
       ID_RODZAJ_R    Integer,
       DATA_WYST      Date,
       DATA_PROP_ZAK  Date,
       ID_SPRZETU     Integer,
       PRZESTOJ_OD    Date,
       DATA_ZDA_KUT   Date,
       LICZBA_RBH     Numeric(15,2),
       DATA_ZAK       Date,
       ID_GR_SPRZ     Integer,
       ID_RODZ_SPRZ   Integer,
       DEPOZYT        Char(1),
       STATUS         Char(1),
       ID_MAG         Integer,
       ID_HARM        Integer,
       NR_HARM        Integer,
       UWAGI          Varchar(250),
       ZADANIE        Varchar(250),
       ID_JEDNOSTKI   Integer,
       ID_KOMORKI     Integer,
       ROK            Integer,
       ID_KOMORKI_GLW Integer,
       ROK_MAG        Integer,
       NR_KOL         Integer,
       SYGN_MAG       Varchar(11),
       NR_MAG         Integer)
AS 
  declare variable COUNTER Integer;
  declare variable ID_MAG_LOC Integer;
begin
select coalesce(count(*),0) from pr_magazyn m where m.ROK = :ROK_MAG and m.ID_KOMORKI = :ID_KOMORKI_GLW and M.DEPOZYT = :DEPOZYT AND M.NR_MAG = :NR_MAG  INTO :COUNTER;
if(counter >1) then exception PR_BAD_NR_MAG;
else if(counter <0) then EXCEPTION PR_NO_NR_MAG; 

select ID_MAG from pr_magazyn m where m.ROK = :ROK_MAG and m.ID_KOMORKI = :ID_KOMORKI_GLW and M.DEPOZYT = :DEPOZYT AND M.NR_MAG = :NR_MAG  INTO :ID_MAG_LOC;

IF(ID_MAG_LOC IS NULL) THEN EXCEPTION PR_NO_NR_MAG;

UPDATE OR INSERT INTO PR_ZLECENIA
(ID_ZLECENIA, SYGN_ZLECENIA, ID_KOD_U, ID_RODZAJ_R, DATA_WYST, ID_SPRZETU, DATA_PROP_ZAK, PRZESTOJ_OD, DATA_ZDA_KUT, LICZBA_RBH, DATA_ZAK, ID_GR_SPRZ, 
 ID_RODZ_SPRZ, DEPOZYT, STATUS, ID_MAG, ID_HARM, NR_HARM, UWAGI, ZADANIE, ID_JEDNOSTKI, ID_KOMORKI, ROK, ID_KOMORKI_GLW, ROK_MAG, NR_KOL, SYGN_MAG, NR_MAG)
VALUES
(:ID_ZLECENIA, :SYGN_ZLECENIA, :ID_KOD_U, :ID_RODZAJ_R, :DATA_WYST, :ID_SPRZETU, :DATA_PROP_ZAK, :PRZESTOJ_OD, :DATA_ZDA_KUT, :LICZBA_RBH, :DATA_ZAK, :ID_GR_SPRZ, :
 ID_RODZ_SPRZ, :DEPOZYT, :STATUS, :ID_MAG_LOC, :ID_HARM, :NR_HARM, :UWAGI, :ZADANIE, :ID_JEDNOSTKI, :ID_KOMORKI, :ROK, :ID_KOMORKI_GLW, :ROK_MAG, :NR_KOL, :SYGN_MAG, :NR_MAG);
end
#C