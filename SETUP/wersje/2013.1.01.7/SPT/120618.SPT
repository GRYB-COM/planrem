CREATE OR ALTER PROCEDURE SP_KODY_USLUG_FOR_MIES_OD_DO(ROK Integer,MIES_OD Integer,MIES_DO Integer,ID_KOMORKI Integer) RETURNS (POZYCJA Integer,POZYCJA_IDX Integer,NAZWA Varchar(200),ILOSC_P Numeric(15,2),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),RODZ_REM Varchar(10),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS BEGIN SUSPEND; END
#C
CREATE OR ALTER PROCEDURE SP_KOMORKI_FOR_MIES_OD_DO(ROK Integer,MIES_OD Integer,MIES_DO Integer) RETURNS (ID_KOMORKI Integer,KOMORKA_IDX Integer,KOD Varchar(20),NAZWA Varchar(210),ILOSC_P Numeric(15,2),RODZ_REM Varchar(10),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS BEGIN SUSPEND; END
#C
CREATE OR ALTER PROCEDURE SP_MIES_OD_DO(POZYCJA Integer,ID_KOMORKI Integer,ID_SPRZETU Integer,ROK Integer,MIES_OD Integer,MIES_DO Integer,ZADANIE Varchar(255)) RETURNS (ILOSC_P Decimal(15,2),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),RODZ_REM Varchar(10),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS BEGIN SUSPEND; END
#C
CREATE OR ALTER PROCEDURE SP_MIES_OD_DO_SPRZ(POZYCJA Integer,ID_KOMORKI Integer,ID_SPRZETU Integer,ROK Integer,MIES_OD Integer,MIES_DO Integer) RETURNS (ILOSC_P Decimal(15,2),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),RODZ_REM Varchar(10)) AS BEGIN SUSPEND; END
#C
CREATE OR ALTER PROCEDURE SP_MIES_OD_DO_ZAD(POZYCJA Integer,ID_KOMORKI Integer,ROK Integer,MIES_OD Integer,MIES_DO Integer,ZADANIE Varchar(255)) RETURNS (ILOSC_P Decimal(15,2),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),RODZ_REM Varchar(10),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS BEGIN SUSPEND; END
#C
CREATE OR ALTER PROCEDURE SP_POLROCZNE(ROK Integer,POLROCZE Integer) RETURNS (POZYCJA Integer,POZYCJA_IDX Integer,KOD_WARSZTATU Varchar(20),KOD_WARSZTATU_IDX Integer,LP Integer,NAZWA Varchar(210),INDEKS_MAT Varchar(20),ILOSC_P Numeric(15,2),RODZ_REM Varchar(10),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS BEGIN SUSPEND; END
#C
CREATE OR ALTER PROCEDURE SP_SPRZET_FOR_MIES_OD_DO(ROK Integer,MIES_OD Integer,MIES_DO Integer,POZYCJA Integer,ID_KOMORKI Integer) RETURNS (INDEKS_MAT Varchar(20),ID_SPRZETU Integer,NAZWA Varchar(210),ILOSC_P Numeric(15,2),RODZ_REM Varchar(10),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS BEGIN SUSPEND; END
#C
/***********************************/
/*        Stored Procedures        */
/***********************************/

ALTER PROCEDURE SP_KODY_USLUG_FOR_MIES_OD_DO (ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       ID_KOMORKI Integer)
returns (POZYCJA     Integer,
         POZYCJA_IDX Integer,
         NAZWA       Varchar(200),
         ILOSC_P     Numeric(15,2),
         ILOSC_R     Numeric(15,2),
         RBH_P       Numeric(15,2),
         RBH_R       Numeric(15,2),
         ILOSC_WP    Numeric(15,2),
         ILOSC_WZ    Numeric(15,2),
         PROC_WP     Varchar(20),
         PROC_WZ     Varchar(20),
         RODZ_REM    Varchar(10),
         ILOSC_WPS   Varchar(20),
         ILOSC_WZS   Varchar(20))
AS 

begin
 FOR  SELECT DISTINCT K.POZYCJA,
 CASE WHEN K.POZYCJA = 999 THEN 'POZOSTA£E ZADANIA' ELSE K.NAZ_REMONTU END
 FROM PR_KODY_USLUG K
 ORDER BY K.POZYCJA
 INTO :POZYCJA,  :NAZWA
 DO BEGIN
 SELECT ILOSC_P, ILOSC_R, RODZ_REM, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_MIES_OD_DO(:POZYCJA,:ID_KOMORKI,NULL,:ROK,:MIES_OD,:MIES_DO,NULL)
 INTO  :ILOSC_P, :ILOSC_R, :RODZ_REM, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 POZYCJA_IDX =1;
 SUSPEND;
 POZYCJA_IDX =2;
 SUSPEND;
 POZYCJA_IDX =3;
 NAZWA='RAZEM ' || NAZWA;
 SUSPEND;
 END
 END
end
#C

ALTER PROCEDURE SP_KOMORKI_FOR_MIES_OD_DO (ROK     Integer,
       MIES_OD Integer,
       MIES_DO Integer)
returns (ID_KOMORKI  Integer,
         KOMORKA_IDX Integer,
         KOD         Varchar(20),
         NAZWA       Varchar(210),
         ILOSC_P     Numeric(15,2),
         RODZ_REM    Varchar(10),
         ILOSC_R     Numeric(15,2),
         RBH_P       Numeric(15,2),
         RBH_R       Numeric(15,2),
         ILOSC_WP    Numeric(15,2),
         ILOSC_WZ    Numeric(15,2),
         PROC_WP     Varchar(20),
         PROC_WZ     Varchar(20),
         ILOSC_WPS   Varchar(20),
         ILOSC_WZS   Varchar(20))
AS 

begin
 FOR  SELECT DISTINCT K.ID_KOMORKI, K.KOD,  K.NAZWA
 FROM PR_KOMORKI K
 WHERE K.WARSZTAT='T' AND K.KOD <>'0/0'
 ORDER BY K.KOD
 INTO :ID_KOMORKI, :KOD, :NAZWA
 DO BEGIN
 SELECT ILOSC_P,  RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS,ILOSC_WZS
 FROM SP_MIES_OD_DO(NULL,:ID_KOMORKI,NULL,:ROK,:MIES_OD,:MIES_DO,NULL)
 INTO  :ILOSC_P, :RODZ_REM,:ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 KOMORKA_IDX =1;
 NAZWA = KOD || ' - ' || NAZWA;
 SUSPEND;
 NAZWA = NULL;
 KOMORKA_IDX =2;
 SUSPEND;
 KOMORKA_IDX =3;
 NAZWA='RAZEM WARSZTAT' || KOD;
 SUSPEND;
 END
 END
end
#C

ALTER PROCEDURE SP_MIES_OD_DO (POZYCJA    Integer,
       ID_KOMORKI Integer,
       ID_SPRZETU Integer,
       ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       ZADANIE    Varchar(255))
returns (ILOSC_P   Decimal(15,2),
         ILOSC_R   Numeric(15,2),
         RBH_P     Numeric(15,2),
         RBH_R     Numeric(15,2),
         ILOSC_WP  Numeric(15,2),
         ILOSC_WZ  Numeric(15,2),
         PROC_WP   Varchar(20),
         PROC_WZ   Varchar(20),
         RODZ_REM  Varchar(10),
         ILOSC_WPS Varchar(20),
         ILOSC_WZS Varchar(20))
AS 
  declare variable ILOSC_P_DET Numeric(15,2);
  declare variable ILOSC_R_DET Numeric(15,2);
  declare variable RBH_P_DET Numeric(15,2);
  declare variable RBH_R_DET Numeric(15,2);
  declare variable ILOSC_WP_DET Numeric(15,2);
  declare variable ILOSC_WZ_DET Numeric(15,2);
begin
IF(ZADANIE IS NULL) THEN
 SELECT ILOSC_P, ILOSC_R, RODZ_REM, RBH_P, RBH_R
 FROM SP_MIES_OD_DO_SPRZ(:POZYCJA,:ID_KOMORKI,:ID_SPRZETU,:ROK,:MIES_OD,:MIES_DO)
 INTO  :ILOSC_P, :ILOSC_R, :RODZ_REM, :RBH_P, :RBH_R;

IF(ZADANIE IS NOT NULL OR ID_SPRZETU IS NULL) THEN
 SELECT ILOSC_P, ILOSC_R, RODZ_REM, RBH_P, RBH_R
 FROM SP_MIES_OD_DO_ZAD(:POZYCJA,:ID_KOMORKI,:ROK,:MIES_OD,:MIES_DO,:ZADANIE)
 INTO  :ILOSC_P_DET, :ILOSC_R_DET, :RODZ_REM, :RBH_P_DET, :RBH_R_DET;
 IF(ILOSC_P     IS NULL) THEN ILOSC_P     = 0;
 IF(ILOSC_R     IS NULL) THEN ILOSC_R     = 0;
 IF(RBH_P       IS NULL) THEN RBH_P       = 0;
 IF(RBH_R       IS NULL) THEN RBH_R       = 0;
 IF(ILOSC_P_DET IS NULL) THEN ILOSC_P_DET = 0;
 IF(ILOSC_R_DET IS NULL) THEN ILOSC_R_DET = 0;
 IF(RBH_P_DET   IS NULL) THEN RBH_P_DET   = 0;
 IF(RBH_R_DET   IS NULL) THEN RBH_R_DET   = 0;
 
 ILOSC_P = ILOSC_P + ILOSC_P_DET;
 ILOSC_R = ILOSC_R + ILOSC_R_DET;
 RBH_P   = RBH_P   + RBH_P_DET;
 RBH_R   = RBH_R   + RBH_R_DET;
/*W PLANOWANYM TRAKCIE REMONTU ZAWSZE ZERO*/
   ILOSC_WP=0;
   ILOSC_WPS = '-';
   PROC_WP   = '-';
 /*ZALEGLOSCI MOGA BYC*/
   ILOSC_WZ = ILOSC_P - ILOSC_R;  
   IF(ILOSC_WZ >0 AND POZYCJA IS NOT NULL AND POZYCJA <>999) THEN
   BEGIN
    ILOSC_WZS = CAST(ILOSC_WZ AS DECIMAL(15,2) );
    PROC_WZ   = CAST(ILOSC_WZ/ILOSC_P*100 AS DECIMAL(15,2));
   END
   ELSE
   BEGIN
    ILOSC_WZS ='-';
    PROC_WZ   ='-';
   END
   SUSPEND;
end
#C

ALTER PROCEDURE SP_MIES_OD_DO_SPRZ (POZYCJA    Integer,
       ID_KOMORKI Integer,
       ID_SPRZETU Integer,
       ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer)
returns (ILOSC_P  Decimal(15,2),
         ILOSC_R  Numeric(15,2),
         RBH_P    Numeric(15,2),
         RBH_R    Numeric(15,2),
         ILOSC_WP Numeric(15,2),
         ILOSC_WZ Numeric(15,2),
         RODZ_REM Varchar(10))
AS 
  declare variable ILOSC_P_DET Numeric(15,2);
  declare variable ILOSC_R_DET Numeric(15,2);
  declare variable RBH_P_DET Numeric(15,2);
  declare variable RBH_R_DET Numeric(15,2);
  declare variable POZYCJA_OD Integer;
  declare variable POZYCJA_DO Integer;
  declare variable KOMORKA_OD Integer;
  declare variable KOMORKA_DO Integer;
  declare variable ROK_HARM Integer;
  declare variable ID_HARM Integer;
  declare variable ID_SPRZETU_OD Integer;
  declare variable ID_SPRZETU_DO Integer;
begin
 ILOSC_P=0; ILOSC_R=0;  RBH_P=0; RBH_R=0; ILOSC_WP=0; ILOSC_WZ=0;
 IF(POZYCJA IS NULL OR POZYCJA <1) THEN
 BEGIN POZYCJA_OD =0; POZYCJA_DO = 999999999; END
 ELSE
 BEGIN POZYCJA_OD =POZYCJA; POZYCJA_DO = POZYCJA; END
 IF(ID_KOMORKI IS NULL OR ID_KOMORKI <1) THEN
 BEGIN KOMORKA_OD =0; KOMORKA_DO = 999999999; END
 ELSE
 BEGIN KOMORKA_OD =ID_KOMORKI; KOMORKA_DO = ID_KOMORKI; END
 IF(ID_SPRZETU IS NULL OR ID_SPRZETU < 1) THEN
 BEGIN ID_SPRZETU_OD = 0;  ID_SPRZETU_DO =9999999; END
 ELSE 
 BEGIN ID_SPRZETU_OD = ID_SPRZETU; ID_SPRZETU_DO = ID_SPRZETU; END
 FOR SELECT H.ROK, H.ID_HARMONOGRAMU,  RE.KOD_REM, SUM(HD.ILOSC), SUM(HD.PLAN_RBH)
 FROM PR_HARMONOGRAM H 
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ROK = H.ROK AND HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU
 INNER JOIN PR_KODY_USLUG      U  ON U.ID_USLUGI   = H.ID_USLUGI
 INNER JOIN PR_REMONTY         RE ON RE.ID_REMONTU = H.ID_REMONTU
 WHERE    
   HD.ROK = :ROK AND 
   H.ID_KOMORKI  BETWEEN  :KOMORKA_OD AND :KOMORKA_DO  AND
   H.ID_SPRZETU  BETWEEN  :ID_SPRZETU_OD   AND :ID_SPRZETU_DO AND
   U.POZYCJA     BETWEEN  :POZYCJA_OD AND :POZYCJA_DO  AND
   HD.MIESIAC    BETWEEN  :MIES_OD    AND :MIES_DO
 GROUP BY H.ROK, H.ID_HARMONOGRAMU,RE.KOD_REM 
 INTO :ROK_HARM, :ID_HARM, :RODZ_REM, :ILOSC_P_DET, :RBH_P_DET
 DO BEGIN
  SELECT  SUM(R.ILOSC), SUM(R.LICZBA_RBH)    
  FROM PR_ZLECENIA Z
  INNER JOIN PR_ZLECENIA_RBH R ON R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI AND Z.ID_ZLECENIA = R.ID_ZLECENIA
  WHERE
   Z.ROK = :ROK_HARM AND Z.ID_HARM = :ID_HARM  AND 
   EXTRACT(YEAR FROM Z.DATA_WYST) =:ROK AND 
   EXTRACT(MONTH FROM Z.DATA_WYST) <=  :MIES_DO   AND 
   (Z.DATA_ZAK IS NULL OR Z.DATA_ZAK < '1900-01-01' OR  (EXTRACT(YEAR FROM Z.DATA_ZAK) =:ROK AND   EXTRACT(MONTH FROM Z.DATA_ZAK)   >=  :MIES_OD) ) 
  INTO  :ILOSC_R_DET, :RBH_R_DET;
  IF(ILOSC_P_DET IS NULL) THEN ILOSC_P_DET =0;
  IF(RBH_P_DET IS NULL)   THEN RBH_P_DET =0;
  IF(ILOSC_R_DET IS NULL) THEN ILOSC_R_DET =0;
  IF(RBH_R_DET IS NULL)   THEN RBH_R_DET =0;
  ILOSC_P = ILOSC_P + ILOSC_P_DET;
  ILOSC_R = ILOSC_R + ILOSC_R_DET;
  RBH_P   = RBH_P   + RBH_P_DET;
  RBH_R   = RBH_R   + RBH_R_DET;
 END
 SUSPEND;
end
#C

ALTER PROCEDURE SP_MIES_OD_DO_ZAD (POZYCJA    Integer,
       ID_KOMORKI Integer,
       ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       ZADANIE    Varchar(255))
returns (ILOSC_P   Decimal(15,2),
         ILOSC_R   Numeric(15,2),
         RBH_P     Numeric(15,2),
         RBH_R     Numeric(15,2),
         ILOSC_WP  Numeric(15,2),
         ILOSC_WZ  Numeric(15,2),
         PROC_WP   Varchar(20),
         PROC_WZ   Varchar(20),
         RODZ_REM  Varchar(10),
         ILOSC_WPS Varchar(20),
         ILOSC_WZS Varchar(20))
AS 
  declare variable ILOSC_P_DET Numeric(15,2);
  declare variable ILOSC_R_DET Numeric(15,2);
  declare variable RBH_P_DET Numeric(15,2);
  declare variable RBH_R_DET Numeric(15,2);
  declare variable POZYCJA_OD Integer;
  declare variable POZYCJA_DO Integer;
  declare variable KOMORKA_OD Integer;
  declare variable KOMORKA_DO Integer;
  declare variable ROK_HARM Integer;
  declare variable ID_HARM Integer;
begin
 ILOSC_P=0; ILOSC_R=0;  RBH_P=0; RBH_R=0; ILOSC_WP=0; ILOSC_WZ=0;
 IF(POZYCJA IS NULL OR POZYCJA <1) THEN
 BEGIN POZYCJA_OD =0; POZYCJA_DO = 999999999; END
 ELSE
 BEGIN POZYCJA_OD =POZYCJA; POZYCJA_DO = POZYCJA; END
 IF(ID_KOMORKI IS NULL OR ID_KOMORKI <1) THEN
 BEGIN KOMORKA_OD =0; KOMORKA_DO = 999999999; END
 ELSE
 BEGIN KOMORKA_OD =ID_KOMORKI; KOMORKA_DO = ID_KOMORKI; END
 FOR SELECT H.ROK, H.ID_HARMONOGRAMU,  RE.KOD_REM, SUM(HD.ILOSC), SUM(HD.PLAN_RBH)
 FROM PR_HARMONOGRAM H 
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ROK = H.ROK AND HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU
 INNER JOIN PR_KODY_USLUG      U  ON U.ID_USLUGI   = H.ID_USLUGI
 INNER JOIN PR_REMONTY         RE ON RE.ID_REMONTU = H.ID_REMONTU
 WHERE    
   HD.ROK = :ROK AND 
   H.ID_KOMORKI  BETWEEN  :KOMORKA_OD AND :KOMORKA_DO  AND
   (:ZADANIE IS  NULL  OR H.ZADANIE =:ZADANIE) AND
   ID_SPRZETU IS  NULL AND
   U.POZYCJA     BETWEEN  :POZYCJA_OD AND :POZYCJA_DO  AND
   HD.MIESIAC    BETWEEN  :MIES_OD    AND :MIES_DO
 GROUP BY H.ROK, H.ID_HARMONOGRAMU,RE.KOD_REM 
 INTO :ROK_HARM, :ID_HARM, :RODZ_REM, :ILOSC_P_DET, :RBH_P_DET
 DO BEGIN
  SELECT  SUM(R.ILOSC), SUM(R.LICZBA_RBH)    
  FROM PR_ZLECENIA Z
  INNER JOIN PR_ZLECENIA_RBH R ON R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI AND Z.ID_ZLECENIA = R.ID_ZLECENIA
  WHERE
   Z.ROK = :ROK_HARM AND Z.ID_HARM = :ID_HARM  AND 
   EXTRACT(YEAR FROM Z.DATA_WYST) =:ROK AND 
   EXTRACT(MONTH FROM Z.DATA_WYST) <=  :MIES_DO   AND 
   (Z.DATA_ZAK IS NULL OR Z.DATA_ZAK < '1900-01-01' OR  (EXTRACT(YEAR FROM Z.DATA_ZAK) =:ROK AND   EXTRACT(MONTH FROM Z.DATA_ZAK)   >=  :MIES_OD) ) 
  INTO  :ILOSC_R_DET, :RBH_R_DET;
  IF(ILOSC_P_DET IS NULL) THEN ILOSC_P_DET =0;
  IF(RBH_P_DET IS NULL)   THEN RBH_P_DET =0;
  IF(ILOSC_R_DET IS NULL) THEN ILOSC_R_DET =0;
  IF(RBH_R_DET IS NULL)   THEN RBH_R_DET =0;
  ILOSC_P = ILOSC_P + ILOSC_P_DET;
  ILOSC_R = ILOSC_R + ILOSC_R_DET;
  RBH_P   = RBH_P   + RBH_P_DET;
  RBH_R   = RBH_R   + RBH_R_DET;
 END

 SUSPEND;
end
#C

ALTER PROCEDURE SP_POLROCZNE (ROK      Integer,
       POLROCZE Integer)
returns (POZYCJA           Integer,
         POZYCJA_IDX       Integer,
         KOD_WARSZTATU     Varchar(20),
         KOD_WARSZTATU_IDX Integer,
         LP                Integer,
         NAZWA             Varchar(210),
         INDEKS_MAT        Varchar(20),
         ILOSC_P           Numeric(15,2),
         RODZ_REM          Varchar(10),
         ILOSC_R           Numeric(15,2),
         RBH_P             Numeric(15,2),
         RBH_R             Numeric(15,2),
         ILOSC_WP          Numeric(15,2),
         ILOSC_WZ          Numeric(15,2),
         PROC_WP           Varchar(20),
         PROC_WZ           Varchar(20),
         ILOSC_WPS         Varchar(20),
         ILOSC_WZS         Varchar(20))
AS 
  declare variable MIES_DO Integer;
  declare variable MIES_OD Integer;
  declare variable ID_SPRZETU Integer;
  declare variable ID_KOMORKI Integer;
begin
 IF(POLROCZE =1) THEN BEGIN MIES_OD =1; MIES_DO = 6; END
 ELSE BEGIN MIES_OD =7; MIES_DO = 12; END
 LP=1;
 FOR SELECT ID_KOMORKI, KOD, KOMORKA_IDX, NAZWA, ILOSC_P, RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_KOMORKI_FOR_MIES_OD_DO(:ROK,:MIES_OD,:MIES_DO)
 INTO  :ID_KOMORKI,:KOD_WARSZTATU, :KOD_WARSZTATU_IDX, :NAZWA, :ILOSC_P,:RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 IF(KOD_WARSZTATU_IDX = 1 OR KOD_WARSZTATU_IDX = 3) THEN
 BEGIN
 POZYCJA       = NULL;
 POZYCJA_IDX   = 0;
 RODZ_REM = NULL;
 SUSPEND;
 END
 ELSE IF(KOD_WARSZTATU_IDX  =2) THEN
 BEGIN
 FOR SELECT POZYCJA,  POZYCJA_IDX, NAZWA, ILOSC_P, RODZ_REM, ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_KODY_USLUG_FOR_MIES_OD_DO(:ROK,:MIES_OD,:MIES_DO,:ID_KOMORKI)
 INTO  :POZYCJA, :POZYCJA_IDX, :NAZWA, :ILOSC_P,:RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 IF(POZYCJA_IDX = 1 OR POZYCJA_IDX =3) THEN
 BEGIN
 RODZ_REM = NULL;
 SUSPEND;
 END
 ELSE IF(KOD_WARSZTATU_IDX =2) THEN
 BEGIN
 FOR SELECT ID_SPRZETU,INDEKS_MAT, NAZWA, ILOSC_P, RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_SPRZET_FOR_MIES_OD_DO(:ROK,:MIES_OD,:MIES_DO,:POZYCJA,:ID_KOMORKI)
 INTO  :ID_SPRZETU, :INDEKS_MAT, :NAZWA, :ILOSC_P, :RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 SUSPEND;
 LP = LP +1;
 END
 END
 END
 END
 END
end
#C

ALTER PROCEDURE SP_SPRZET_FOR_MIES_OD_DO (ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       POZYCJA    Integer,
       ID_KOMORKI Integer)
returns (INDEKS_MAT Varchar(20),
         ID_SPRZETU Integer,
         NAZWA      Varchar(210),
         ILOSC_P    Numeric(15,2),
         RODZ_REM   Varchar(10),
         ILOSC_R    Numeric(15,2),
         RBH_P      Numeric(15,2),
         RBH_R      Numeric(15,2),
         ILOSC_WP   Numeric(15,2),
         ILOSC_WZ   Numeric(15,2),
         PROC_WP    Varchar(20),
         PROC_WZ    Varchar(20),
         ILOSC_WPS  Varchar(20),
         ILOSC_WZS  Varchar(20))
AS 
  declare variable ZADANIE Varchar(255);
begin
 FOR  SELECT DISTINCT S.ID_SPRZETU, S.NAZWA,  S.INDEKS_MAT
 FROM PR_SPRZET S  WHERE S.ID_SPRZETU > 0
 ORDER BY S.NAZWA
 INTO :ID_SPRZETU, :NAZWA, :INDEKS_MAT
 DO BEGIN
 SELECT RODZ_REM,ILOSC_P, ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_MIES_OD_DO(:POZYCJA,:ID_KOMORKI,:ID_SPRZETU,:ROK,:MIES_OD,:MIES_DO,null)
 INTO :RODZ_REM, :ILOSC_P, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 SUSPEND;
 END
 END
 ID_SPRZETU = 0;
 INDEKS_MAT =NULL;
 FOR  SELECT DISTINCT H.ZADANIE FROM PR_HARMONOGRAM H  WHERE H.ID_SPRZETU IS NULL  AND H.ZADANIE IS NOT NULL ORDER BY H.ZADANIE
 INTO  :ZADANIE
 DO BEGIN
 NAZWA = SUBSTRING( ZADANIE FROM 1 FOR 210); 
 ID_SPRZETU = ID_SPRZETU -1;
 SELECT RODZ_REM,ILOSC_P, ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_MIES_OD_DO(:POZYCJA,:ID_KOMORKI,:ID_SPRZETU,:ROK,:MIES_OD,:MIES_DO,:ZADANIE)
 INTO :RODZ_REM, :ILOSC_P, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 SUSPEND;
 END
 END
end
#C

