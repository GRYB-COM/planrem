CREATE OR ALTER PROCEDURE SP_KODY_USLUG_FOR_MIES_OD_DO(ROK Integer,MIES_OD Integer,MIES_DO Integer) RETURNS (POZYCJA Integer,POZYCJA_IDX Integer,NAZWA Varchar(200),ILOSC_P Numeric(15,2),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),RODZ_REM Varchar(10),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20))
AS
BEGIN
 SUSPEND;
END
#C
CREATE OR ALTER PROCEDURE  SP_KOMORKI_FOR_MIES_OD_DO(ROK Integer,MIES_OD Integer,MIES_DO Integer,POZYCJA Integer) RETURNS (ID_KOMORKI Integer,KOMORKA_IDX Integer,KOD Varchar(20),NAZWA Varchar(210),ILOSC_P Numeric(15,2),RODZ_REM Varchar(10),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS
BEGIN
 SUSPEND;
END
 
#C
CREATE OR ALTER PROCEDURE  SP_MIES_OD_DO(POZYCJA Integer,ID_KOMORKI Integer,ID_SPRZETU Integer,ROK Integer,MIES_OD Integer,MIES_DO Integer) RETURNS (ILOSC_P Decimal(15,2),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),RODZ_REM Varchar(10),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS
BEGIN
 SUSPEND;
END
 
#C
CREATE OR ALTER PROCEDURE  SP_POLROCZNE(ROK Integer,POLROCZE Integer) RETURNS (POZYCJA Integer,POZYCJA_IDX Integer,KOD_WARSZTATU Varchar(20),KOD_WARSZTATU_IDX Integer,LP Integer,NAZWA Varchar(210),INDEKS_MAT Varchar(20),ILOSC_P Numeric(15,2),RODZ_REM Varchar(10),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS
BEGIN
 SUSPEND;
END
 
#C
CREATE OR ALTER PROCEDURE  SP_SPRZET_FOR_MIES_OD_DO(ROK Integer,MIES_OD Integer,MIES_DO Integer,POZYCJA Integer,ID_KOMORKI Integer) RETURNS (INDEKS_MAT Varchar(20),ID_SPRZETU Integer,NAZWA Varchar(210),ILOSC_P Numeric(15,2),RODZ_REM Varchar(10),ILOSC_R Numeric(15,2),RBH_P Numeric(15,2),RBH_R Numeric(15,2),ILOSC_WP Numeric(15,2),ILOSC_WZ Numeric(15,2),PROC_WP Varchar(20),PROC_WZ Varchar(20),ILOSC_WPS Varchar(20),ILOSC_WZS Varchar(20)) AS
BEGIN
 SUSPEND;
END
 
#C
/***********************************/
/*        Stored Procedures        */
/***********************************/

CREATE OR ALTER PROCEDURE SP_KODY_USLUG_FOR_MIES_OD_DO (ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       ID_KOMORKI Integer)
returns (POZYCJA     Integer,
         POZYCJA_IDX Integer,
         NAZWA       Varchar(200),
         ILOSC_P     Numeric(15,2),
         ILOSC_R     Numeric(15,2),
         RBH_P       Numeric(15,2),
         RBH_R       Numeric(15,2),
         ILOSC_WP    Numeric(15,2),
         ILOSC_WZ    Numeric(15,2),
         PROC_WP     Varchar(20),
         PROC_WZ     Varchar(20),
         RODZ_REM    Varchar(10),
         ILOSC_WPS   Varchar(20),
         ILOSC_WZS   Varchar(20))
AS 

begin
 FOR  SELECT DISTINCT K.POZYCJA,
 CASE WHEN K.POZYCJA = 999 THEN 'POZOSTA£E ZADANIA' ELSE K.NAZ_REMONTU END
 FROM PR_KODY_USLUG K 
 ORDER BY K.POZYCJA
 INTO :POZYCJA,  :NAZWA
 DO BEGIN
 SELECT ILOSC_P, ILOSC_R, RODZ_REM, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_MIES_OD_DO(:POZYCJA,:ID_KOMORKI,NULL,:ROK,:MIES_OD,:MIES_DO)
 INTO  :ILOSC_P, :ILOSC_R, :RODZ_REM, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 POZYCJA_IDX =1;
 SUSPEND;
 POZYCJA_IDX =2;
 SUSPEND;
 POZYCJA_IDX =3;
 NAZWA='RAZEM ' || NAZWA;
 SUSPEND;
 END
 END
end
#C

CREATE OR ALTER PROCEDURE SP_KOMORKI_FOR_MIES_OD_DO (ROK     Integer,
       MIES_OD Integer,
       MIES_DO Integer)
returns (ID_KOMORKI  Integer,
         KOMORKA_IDX Integer,
         KOD         Varchar(20),
         NAZWA       Varchar(210),
         ILOSC_P     Numeric(15,2),
         RODZ_REM    Varchar(10),
         ILOSC_R     Numeric(15,2),
         RBH_P       Numeric(15,2),
         RBH_R       Numeric(15,2),
         ILOSC_WP    Numeric(15,2),
         ILOSC_WZ    Numeric(15,2),
         PROC_WP     Varchar(20),
         PROC_WZ     Varchar(20),
         ILOSC_WPS   Varchar(20),
         ILOSC_WZS   Varchar(20))
AS 

begin
 FOR  SELECT DISTINCT K.ID_KOMORKI, K.KOD,  K.NAZWA
 FROM PR_KOMORKI K
 WHERE K.WARSZTAT='T' AND K.KOD <>'0/0'
 ORDER BY K.KOD
 INTO :ID_KOMORKI, :KOD, :NAZWA
 DO BEGIN
 SELECT ILOSC_P,  RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS,ILOSC_WZS
 FROM SP_MIES_OD_DO(null,:ID_KOMORKI,null,:ROK,:MIES_OD,:MIES_DO)
 INTO  :ILOSC_P, :RODZ_REM,:ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
 IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
 BEGIN
 KOMORKA_IDX =1;
 NAZWA = KOD || ' - ' || NAZWA;
 SUSPEND;
 NAZWA = NULL;
 KOMORKA_IDX =2;
 SUSPEND;
 KOMORKA_IDX =3;
 NAZWA='RAZEM WARSZTAT' || KOD;
 SUSPEND;
 END
 END
end
#C

ALTER PROCEDURE SP_MIES_OD_DO (POZYCJA    Integer,
       ID_KOMORKI Integer,
       ID_SPRZETU Integer,
       ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer)
returns (ILOSC_P   Decimal(15,2),
         ILOSC_R   Numeric(15,2),
         RBH_P     Numeric(15,2),
         RBH_R     Numeric(15,2),
         ILOSC_WP  Numeric(15,2),
         ILOSC_WZ  Numeric(15,2),
         PROC_WP   Varchar(20),
         PROC_WZ   Varchar(20),
         RODZ_REM  Varchar(10),
         ILOSC_WPS Varchar(20),
         ILOSC_WZS Varchar(20))
AS 
  declare variable ILOSC_P_DET Numeric(15,2);
  declare variable RBH_ZKUT Numeric(15,2);
  declare variable ILOSC_R_DET Numeric(15,2);
  declare variable RBH_P_DET Numeric(15,2);
  declare variable RBH_R_DET Numeric(15,2);
  declare variable ILOSC_WP_DET Numeric(15,2);
  declare variable ID_ZLECENIA Integer;
  declare variable MAX_MIES Integer;
  declare variable ILOSC_P_MM Numeric(15,2);
  declare variable ILOSC_R_MM Numeric(15,2);
  declare variable ILOSC_WZ_DET Numeric(15,2);
  declare variable POZYCJA_OD Integer;
  declare variable POZYCJA_DO Integer;
  declare variable KOMORKA_OD Integer;
  declare variable KOMORKA_DO Integer;
  declare variable SPRZET_OD Integer;
  declare variable SPRZET_DO Integer;
  declare variable ID_KOMORKI_ZLEC Integer;
begin
ILOSC_P=0; ILOSC_R=0;  RBH_P=0; RBH_R=0; ILOSC_WP=0; ILOSC_WZ=0;
IF(POZYCJA IS NULL OR POZYCJA <1) THEN 
   BEGIN POZYCJA_OD =0; POZYCJA_DO = 999999999; END
ELSE
   BEGIN POZYCJA_OD =POZYCJA; POZYCJA_DO = POZYCJA; END
    
IF(ID_KOMORKI IS NULL OR ID_KOMORKI <1) THEN 
   BEGIN KOMORKA_OD =0; KOMORKA_DO = 999999999; END
ELSE
   BEGIN KOMORKA_OD =ID_KOMORKI; KOMORKA_DO = ID_KOMORKI; END
    
IF(ID_SPRZETU IS NULL OR ID_SPRZETU <1) THEN 
   BEGIN SPRZET_OD =0; SPRZET_DO = 999999999; END
ELSE
   BEGIN SPRZET_OD =ID_SPRZETU; SPRZET_DO = ID_SPRZETU; END
    
FOR SELECT M.ILOSC, Z.ID_ZLECENIA, Z.LICZBA_RBH, Z.ID_KOMORKI,RE.KOD_REM ,
SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO AND R.ILOSC IS NOT NULL THEN R.ILOSC ELSE 0.0 END),
SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO AND R.PLAN_RBH IS NOT NULL THEN R.PLAN_RBH ELSE 0.0 END),
SUM(CASE WHEN R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO AND R.LICZBA_RBH IS NOT NULL THEN R.LICZBA_RBH ELSE 0.0 END)
FROM PR_HARMONOGRAM H 
INNER JOIN PR_ZLECENIA      Z ON Z.ROK = H.ROK AND Z.ID_HARM = H.ID_HARMONOGRAMU  
INNER JOIN PR_MAGAZYN       M ON M.ROK = Z.ROK_MAG AND M.ID_KOMORKI = Z.ID_KOMORKI_GLW AND M.DEPOZYT =Z.DEPOZYT AND M.ID_MAG = Z.ID_MAG
LEFT OUTER JOIN PR_ZLECENIA_RBH  R ON R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI AND  R.ID_ZLECENIA = Z.ID_ZLECENIA
INNER JOIN PR_KODY_USLUG U ON U.ID_USLUGI = H.ID_USLUGI
LEFT OUTER JOIN PR_REMONTY RE ON RE.ID_REMONTU = M.ID_REMONTU
WHERE 
U.POZYCJA     BETWEEN  :POZYCJA_OD AND :POZYCJA_DO  AND 
Z.ID_KOMORKI  BETWEEN  :KOMORKA_OD AND :KOMORKA_DO  AND
M.ID_SPRZETU  BETWEEN  :SPRZET_OD  AND :SPRZET_DO   AND 
Z.NR_KOL =0 AND Z.ROK=:ROK  AND EXTRACT(YEAR FROM Z.DATA_WYST) =:ROK AND EXTRACT(MONTH FROM Z.DATA_WYST) <=  :MIES_DO
AND (Z.DATA_ZAK IS NULL OR Z.DATA_ZAK < '1900-01-01' OR  (EXTRACT(YEAR FROM Z.DATA_ZAK) =:ROK AND  EXTRACT(MONTH FROM Z.DATA_ZAK)   >=  :MIES_OD) )  AND   m.DEPOZYT <> 'D' 
GROUP BY   M.ILOSC, Z.ID_ZLECENIA, Z.LICZBA_RBH,Z.ID_KOMORKI,RE.KOD_REM
INTO :ILOSC_P_DET, :ID_ZLECENIA, :RBH_ZKUT, :ID_KOMORKI_ZLEC, :RODZ_REM, :ILOSC_R_DET, :RBH_P_DET, :RBH_R_DET
DO BEGIN
 ILOSC_P = ILOSC_P + ILOSC_P_DET;
 ILOSC_R = ILOSC_R + ILOSC_R_DET;
 IF(RBH_ZKUT < RBH_P_DET) THEN RBH_P = RBH_P + RBH_ZKUT;
 ELSE RBH_P = RBH_P + RBH_P_DET;
 RBH_R   = RBH_R + RBH_R_DET;
 ILOSC_WP_DET = ILOSC_P_DET - ILOSC_R_DET;
 IF(ILOSC_WP_DET IS NULL OR ILOSC_WP_DET <0) THEN ILOSC_WP_DET = 0; 
 SELECT MAX(R.MIESIAC) FROM PR_ZLECENIA_RBH R WHERE R.ID_KOMORKI = :ID_KOMORKI_ZLEC AND  R.ROK = :ROK AND R.ID_ZLECENIA = :ID_ZLECENIA 
 AND ( (R.PLAN_ILOSC IS NOT NULL AND R.PLAN_ILOSC >0) OR (R.ILOSC IS NOT NULL AND R.ILOSC >0)) AND R.MIESIAC BETWEEN :MIES_OD AND :MIES_DO
 INTO :MAX_MIES;
 
 SELECT R.PLAN_ILOSC, R.ILOSC FROM PR_ZLECENIA_RBH R WHERE R.ID_KOMORKI = :ID_KOMORKI_ZLEC AND  R.ROK = :ROK AND R.ID_ZLECENIA = :ID_ZLECENIA AND R.MIESIAC = :MAX_MIES
 INTO :ILOSC_P_MM, ILOSC_R_MM;
 ILOSC_WZ_DET = ILOSC_P_MM - ILOSC_R_MM;
 IF(ILOSC_WZ_DET IS NULL OR ILOSC_WZ_DET <0) THEN ILOSC_WZ_DET =0;
 ILOSC_WP_DET = ILOSC_WP_DET - ILOSC_WZ_DET;
 IF(ILOSC_WP_DET IS NULL OR ILOSC_WP_DET <0) THEN ILOSC_WP_DET =0;
 ILOSC_WZ = ILOSC_WZ + ILOSC_WZ_DET; 
 ILOSC_WP = ILOSC_WP + ILOSC_WP_DET;
END
 IF(ILOSC_P >0 AND ILOSC_WP <>0 ) THEN
 BEGIN
      ILOSC_WPS = CAST(ILOSC_WP AS DECIMAL(15,2) );
      PROC_WP = CAST(ILOSC_WP/ILOSC_P*100 AS DECIMAL(15,2));
 END     
 IF(ILOSC_P >0 AND ILOSC_WZ <>0 ) THEN
 BEGIN
      ILOSC_WZS = CAST(ILOSC_WZ AS DECIMAL(15,2) );
      PROC_WZ = CAST(ILOSC_WZ/ILOSC_P*100 AS DECIMAL(15,2));
 END     
 IF(PROC_WP IS NULL OR PROC_WP =0)  THEN PROC_WP='-';
 IF(PROC_WZ IS NULL OR PROC_WZ =0)  THEN PROC_WZ='-';
 IF(ILOSC_WP IS NULL OR ILOSC_WP =0)  THEN ILOSC_WPS='-';
 IF(ILOSC_WZ IS NULL OR ILOSC_WZ =0)  THEN ILOSC_WZS='-';
SUSPEND;
end
#C

CREATE OR ALTER PROCEDURE SP_POLROCZNE (ROK      Integer,
       POLROCZE Integer)
returns (POZYCJA           Integer,
         POZYCJA_IDX       Integer,
         KOD_WARSZTATU     Varchar(20),
         KOD_WARSZTATU_IDX Integer,
         LP                Integer,
         NAZWA             Varchar(210),
         INDEKS_MAT        Varchar(20),
         ILOSC_P           Numeric(15,2),
         RODZ_REM          Varchar(10),
         ILOSC_R           Numeric(15,2),
         RBH_P             Numeric(15,2),
         RBH_R             Numeric(15,2),
         ILOSC_WP          Numeric(15,2),
         ILOSC_WZ          Numeric(15,2),
         PROC_WP           Varchar(20),
         PROC_WZ           Varchar(20),
         ILOSC_WPS         Varchar(20),
         ILOSC_WZS         Varchar(20))
AS 
  declare variable MIES_DO Integer;
  declare variable MIES_OD Integer;
  declare variable ID_SPRZETU Integer;
  declare variable ID_KOMORKI Integer;
begin
 IF(POLROCZE =1) THEN BEGIN MIES_OD =1; MIES_DO = 6; END
 ELSE BEGIN MIES_OD =7; MIES_DO = 12; END
 LP=1;
 FOR SELECT ID_KOMORKI, KOD, KOMORKA_IDX, NAZWA, ILOSC_P, RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_KOMORKI_FOR_MIES_OD_DO(:ROK,:MIES_OD,:MIES_DO)
 INTO  :ID_KOMORKI,:KOD_WARSZTATU, :KOD_WARSZTATU_IDX, :NAZWA, :ILOSC_P,:RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 IF(KOD_WARSZTATU_IDX = 1 OR KOD_WARSZTATU_IDX = 3) THEN
 BEGIN
 POZYCJA       = NULL;
 POZYCJA_IDX   = 0;
 RODZ_REM = NULL;
 SUSPEND;
 END
 ELSE IF(KOD_WARSZTATU_IDX  =2) THEN
 BEGIN
 FOR SELECT POZYCJA,  POZYCJA_IDX, NAZWA, ILOSC_P, RODZ_REM, ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_KODY_USLUG_FOR_MIES_OD_DO(:ROK,:MIES_OD,:MIES_DO,:ID_KOMORKI)
 INTO  :POZYCJA, :POZYCJA_IDX, :NAZWA, :ILOSC_P,:RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 IF(POZYCJA_IDX = 1 OR POZYCJA_IDX =3) THEN
 BEGIN
 RODZ_REM = NULL;
 SUSPEND;
 END
 ELSE IF(KOD_WARSZTATU_IDX =2) THEN
 BEGIN
 FOR SELECT ID_SPRZETU,INDEKS_MAT, NAZWA, ILOSC_P, RODZ_REM,ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
 FROM SP_SPRZET_FOR_MIES_OD_DO(:ROK,:MIES_OD,:MIES_DO,:POZYCJA,:ID_KOMORKI)
 INTO  :ID_SPRZETU, :INDEKS_MAT, :NAZWA, :ILOSC_P, :RODZ_REM, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS
 DO BEGIN
 SUSPEND;
 LP = LP +1;
 END
 END
 END
 END
 END
end
#C

ALTER PROCEDURE SP_SPRZET_FOR_MIES_OD_DO (ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       POZYCJA    Integer,
       ID_KOMORKI Integer)
returns (INDEKS_MAT Varchar(20),
         ID_SPRZETU Integer,
         NAZWA      Varchar(210),
         ILOSC_P    Numeric(15,2),
         RODZ_REM   Varchar(10),
         ILOSC_R    Numeric(15,2),
         RBH_P      Numeric(15,2),
         RBH_R      Numeric(15,2),
         ILOSC_WP   Numeric(15,2),
         ILOSC_WZ   Numeric(15,2),
         PROC_WP    Varchar(20),
         PROC_WZ    Varchar(20),
         ILOSC_WPS  Varchar(20),
         ILOSC_WZS  Varchar(20))
AS 

begin
FOR  SELECT DISTINCT S.ID_SPRZETU, S.NAZWA,  S.INDEKS_MAT 
FROM PR_SPRZET S  WHERE S.ID_SPRZETU > 0
ORDER BY S.NAZWA
INTO :ID_SPRZETU, :NAZWA, :INDEKS_MAT
DO BEGIN
  SELECT RODZ_REM,ILOSC_P, ILOSC_R, RBH_P, RBH_R, ILOSC_WP, ILOSC_WZ, PROC_WP, PROC_WZ, ILOSC_WPS, ILOSC_WZS
  FROM SP_MIES_OD_DO(:POZYCJA,:ID_KOMORKI,:ID_SPRZETU,:ROK,:MIES_OD,:MIES_DO)
  INTO :RODZ_REM, :ILOSC_P, :ILOSC_R, :RBH_P, :RBH_R, :ILOSC_WP, :ILOSC_WZ, :PROC_WP, :PROC_WZ, :ILOSC_WPS, :ILOSC_WZS;
  IF(ILOSC_P>0 OR ILOSC_R >0 OR RBH_P >0 OR RBH_R>0) THEN
  BEGIN
   SUSPEND;
  END 
END
end
#C