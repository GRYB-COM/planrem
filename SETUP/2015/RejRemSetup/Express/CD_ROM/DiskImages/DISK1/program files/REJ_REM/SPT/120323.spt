CREATE OR ALTER PROCEDURE SP_SPRZET_NIEDOSTARCZONY (ROK     Integer,
       MIES_OD Integer,
       MIES_DO Integer)
returns (DATA_DO         Date,
         WARSZTAT        Varchar(20),
         ID_HARMONOGRAMU Integer,
         NAZ_SPRZ        Varchar(255),
         NAZ_JEDNOSTKI   Char(80),
         KOD_REM         Varchar(10),
         NR_FABR         Varchar(50),
         PLANOWANE       Numeric(15,2),
         PRZYJETE        Decimal(15,2),
         NIE_DOST        Numeric(15,2),
         DATA_PRZYJ      Date,
         DATA_PROP_ZAK   Date)
AS 

begin
 IF(MIES_DO = 12) THEN DATA_DO = ROK || '-'|| MIES_DO ||'-' || 31;
 ELSE
 BEGIN
 DATA_DO = ROK || '-' || (MIES_DO + 1) ||'-' || 1;
 DATA_DO = DATA_DO -1;
 END
 FOR SELECT
 :DATA_DO,
 K.KOD AS WARSZTAT,
 H.ID_HARMONOGRAMU,
 CASE WHEN S.NAZWA IS NULL THEN H.ZADANIE ELSE S.NAZWA END  AS NAZ_SPRZ,
 J.JW || ' ' || J.MIEJSCOWOSC AS NAZ_JEDNOSTKI,
 R.KOD_REM,  H.NR_ZADANIA NR_FABR,
 SUM(HD.ILOSC) planowane,
 H.DATA_OD AS DATA_PRZYJ, H.DATA_DO  AS DATA_PROP_ZAK
 FROM PR_harmonogram H
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU AND HD.ROK = H.ROK
 LEFT OUTER JOIN PR_SPRZET    S ON S.ID_SPRZETU = H.ID_SPRZETU
 LEFT OUTER JOIN PR_JEDNOSTKI J ON J.ID_JEDNOSTKI = H.ID_JEDNOSTKI
 LEFT OUTER JOIN PR_KOMORKI   K ON K.ID_KOMORKI = H.ID_KOMORKI
 LEFT OUTER JOIN PR_REMONTY R ON R.ID_REMONTU = H.ID_REMONTU
 WHERE  H.ROK= :ROK AND  H.ID_HARMONOGRAMU - (H.ID_HARMONOGRAMU/1000)*1000 >8    AND  HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO
 GROUP BY K.KOD, H.ID_HARMONOGRAMU, S.NAZWA, H.ZADANIE,J.JW, J.MIEJSCOWOSC ,R.KOD_REM,  H.NR_ZADANIA, H.DATA_OD, H.DATA_DO
 ORDER BY K.KOD, H.ID_HARMONOGRAMU
 INTO :DATA_DO, :WARSZTAT,  :ID_HARMONOGRAMU, :NAZ_SPRZ, :NAZ_JEDNOSTKI,:KOD_REM, :NR_FABR, :PLANOWANE,  :DATA_PRZYJ,:DATA_PROP_ZAK
 DO
 BEGIN
 SELECT SUM(M.ILOSC) FROM PR_MAGAZYN M 
 INNER JOIN PR_ZLECENIA Z ON Z.ROK_MAG = M.ROK AND Z.DEPOZYT = M.DEPOZYT AND Z.ID_KOMORKI_GLW = M.ID_KOMORKI AND Z.ID_MAG = M.ID_MAG AND Z.NR_KOL = 0
 WHERE Z.ID_HARM = :ID_HARMONOGRAMU AND Z.ROK = :ROK AND  M.DATA_PRZYJ<= :DATA_DO into :PRZYJETE;
 IF(PLANOWANE IS NULL) THEN PLANOWANE=0.0;
 IF(PRZYJETE IS NULL) THEN PRZYJETE =0.0;
 NIE_DOST = PLANOWANE - PRZYJETE;
 IF(NIE_DOST IS NULL OR NIE_DOST <0.0) THEN NIE_DOST = 0.0;
 IF(NIE_DOST >0) THEN SUSPEND;
 END
end
#C