CREATE OR ALTER PROCEDURE SP_MIES_OD_DO_ZAD (POZYCJA    Integer,
       ID_KOMORKI Integer,
       ID_REMONTU Integer,
       ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer,
       ZADANIE    Varchar(255))
returns (ILOSC_P   Decimal(15,2),
         ILOSC_R   Numeric(15,2),
         RBH_P     Numeric(15,2),
         RBH_R     Numeric(15,2),
         ILOSC_WP  Numeric(15,2),
         ILOSC_WZ  Numeric(15,2),
         PROC_WP   Varchar(20),
         PROC_WZ   Varchar(20),
         RODZ_REM  Varchar(10),
         ILOSC_WPS Varchar(20),
         ILOSC_WZS Varchar(20))
AS 
  declare variable ILOSC_P_DET Numeric(15,2);
  declare variable ILOSC_R_DET Numeric(15,2);
  declare variable RBH_P_DET Numeric(15,2);
  declare variable RBH_R_DET Numeric(15,2);
  declare variable POZYCJA_OD Integer;
  declare variable POZYCJA_DO Integer;
  declare variable KOMORKA_OD Integer;
  declare variable KOMORKA_DO Integer;
  declare variable ROK_HARM Integer;
  declare variable ID_HARM Integer;
  declare variable ID_REMONTU_OD Integer;
  declare variable ID_REMONTU_DO Integer;
begin
 ILOSC_P=0; ILOSC_R=0;  RBH_P=0; RBH_R=0; ILOSC_WP=0; ILOSC_WZ=0;
 IF(POZYCJA IS NULL OR POZYCJA <1) THEN
 BEGIN POZYCJA_OD =0; POZYCJA_DO = 999999999; END
 ELSE
 BEGIN POZYCJA_OD =POZYCJA; POZYCJA_DO = POZYCJA; END
 IF(ID_KOMORKI IS NULL OR ID_KOMORKI <1) THEN
 BEGIN KOMORKA_OD =0; KOMORKA_DO = 999999999; END
 ELSE
 BEGIN KOMORKA_OD =ID_KOMORKI; KOMORKA_DO = ID_KOMORKI; END
 IF(ID_REMONTU IS NULL OR ID_REMONTU <1) THEN BEGIN ID_REMONTU_OD = 0; ID_REMONTU_DO =99999999; END
 ELSE BEGIN ID_REMONTU_OD = ID_REMONTU; ID_REMONTU_DO = ID_REMONTU; END
 FOR SELECT H.ROK, H.ID_HARMONOGRAMU,  RE.KOD_REM, 
 SUM(CASE WHEN HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN HD.ILOSC ELSE 0.0 END),
 SUM(CASE WHEN HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN PLAN_RBH ELSE 0.0 END)
 FROM PR_HARMONOGRAM H
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ROK = H.ROK AND HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU
 INNER JOIN PR_KODY_USLUG      U  ON U.ID_USLUGI   = H.ID_USLUGI
 INNER JOIN PR_REMONTY         RE ON RE.ID_REMONTU = H.ID_REMONTU
 WHERE
 HD.ROK = :ROK AND
 H.ID_KOMORKI  BETWEEN  :KOMORKA_OD AND :KOMORKA_DO  AND
 (:ZADANIE IS  NULL  OR H.ZADANIE =:ZADANIE) AND
 ID_SPRZETU IS  NULL AND
 U.POZYCJA     BETWEEN  :POZYCJA_OD AND :POZYCJA_DO  AND
 HD.MIESIAC    BETWEEN  :MIES_OD    AND :MIES_DO and
 RE.ID_REMONTU BETWEEN  :ID_REMONTU_OD AND :ID_REMONTU_DO
 GROUP BY H.ROK, H.ID_HARMONOGRAMU,RE.KOD_REM
 INTO :ROK_HARM, :ID_HARM, :RODZ_REM, :ILOSC_P_DET, :RBH_P_DET
 DO BEGIN
 SELECT  SUM(R.ILOSC), SUM(R.LICZBA_RBH)
 FROM PR_ZLECENIA Z
 INNER JOIN PR_ZLECENIA_RBH R ON R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI AND Z.ID_ZLECENIA = R.ID_ZLECENIA
 WHERE
 Z.ROK = :ROK_HARM AND Z.ID_HARM = :ID_HARM  AND
 EXTRACT(YEAR FROM Z.DATA_WYST) =:ROK AND
 EXTRACT(MONTH FROM Z.DATA_WYST) <=  :MIES_DO   AND
 (Z.DATA_ZAK IS NULL OR Z.DATA_ZAK < '1900-01-01' OR  (EXTRACT(YEAR FROM Z.DATA_ZAK) =:ROK AND   EXTRACT(MONTH FROM Z.DATA_ZAK)   >=  :MIES_OD) )
 INTO  :ILOSC_R_DET, :RBH_R_DET;
 IF(ILOSC_P_DET IS NULL) THEN ILOSC_P_DET =0;
 IF(RBH_P_DET IS NULL)   THEN RBH_P_DET =0;
 IF(ILOSC_R_DET IS NULL) THEN ILOSC_R_DET =0;
 IF(RBH_R_DET IS NULL)   THEN RBH_R_DET =0;
 ILOSC_P = ILOSC_P + ILOSC_P_DET;
 ILOSC_R = ILOSC_R + ILOSC_R_DET;
 RBH_P   = RBH_P   + RBH_P_DET;
 RBH_R   = RBH_R   + RBH_R_DET;
 END
 SUSPEND;
end
#C

CREATE OR ALTER PROCEDURE SP_MIES_OD_DO_SPRZ (POZYCJA    Integer,
       ID_KOMORKI Integer,
       ID_REMONTU Integer,
       ID_SPRZETU Integer,
       ROK        Integer,
       MIES_OD    Integer,
       MIES_DO    Integer)
returns (ILOSC_P  Decimal(15,2),
         ILOSC_R  Numeric(15,2),
         RBH_P    Numeric(15,2),
         RBH_R    Numeric(15,2),
         ILOSC_WP Numeric(15,2),
         ILOSC_WZ Numeric(15,2),
         RODZ_REM Varchar(10))
AS 
  declare variable ILOSC_P_DET Numeric(15,2);
  declare variable ILOSC_R_DET Numeric(15,2);
  declare variable RBH_P_DET Numeric(15,2);
  declare variable RBH_R_DET Numeric(15,2);
  declare variable POZYCJA_OD Integer;
  declare variable POZYCJA_DO Integer;
  declare variable KOMORKA_OD Integer;
  declare variable KOMORKA_DO Integer;
  declare variable ROK_HARM Integer;
  declare variable ID_HARM Integer;
  declare variable ID_SPRZETU_OD Integer;
  declare variable ID_SPRZETU_DO Integer;
  declare variable ID_REMONTU_DO Integer;
  declare variable ID_REMONTU_OD Integer;
begin
 ILOSC_P=0; ILOSC_R=0;  RBH_P=0; RBH_R=0; ILOSC_WP=0; ILOSC_WZ=0;
 IF(POZYCJA IS NULL OR POZYCJA <1) THEN
 BEGIN POZYCJA_OD =0; POZYCJA_DO = 999999999; END
 ELSE
 BEGIN POZYCJA_OD =POZYCJA; POZYCJA_DO = POZYCJA; END
 IF(ID_KOMORKI IS NULL OR ID_KOMORKI <1) THEN
 BEGIN KOMORKA_OD =0; KOMORKA_DO = 999999999; END
 ELSE
 BEGIN KOMORKA_OD =ID_KOMORKI; KOMORKA_DO = ID_KOMORKI; END
 IF(ID_SPRZETU IS NULL OR ID_SPRZETU < 1) THEN
 BEGIN ID_SPRZETU_OD = 0;  ID_SPRZETU_DO =9999999; END
 ELSE
 BEGIN ID_SPRZETU_OD = ID_SPRZETU; ID_SPRZETU_DO = ID_SPRZETU; END
 IF(ID_REMONTU IS NULL OR ID_REMONTU <1) THEN BEGIN ID_REMONTU_OD = 0; ID_REMONTU_DO =99999999; END
 ELSE BEGIN ID_REMONTU_OD = ID_REMONTU; ID_REMONTU_DO = ID_REMONTU; END
 FOR SELECT H.ROK, H.ID_HARMONOGRAMU,  RE.KOD_REM, 
 SUM(CASE WHEN HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN HD.ILOSC ELSE 0.0 END),
 SUM(CASE WHEN HD.MIESIAC BETWEEN :MIES_OD AND :MIES_DO THEN PLAN_RBH ELSE 0.0 END)
 FROM PR_HARMONOGRAM H
 INNER JOIN PR_HARMONOGRAM_DET HD ON HD.ROK = H.ROK AND HD.ID_HARMONOGRAMU = H.ID_HARMONOGRAMU
 INNER JOIN PR_KODY_USLUG      U  ON U.ID_USLUGI   = H.ID_USLUGI
 INNER JOIN PR_REMONTY         RE ON RE.ID_REMONTU = H.ID_REMONTU
 WHERE
 HD.ROK = :ROK AND
 H.ID_KOMORKI  BETWEEN  :KOMORKA_OD AND :KOMORKA_DO  AND
 H.ID_SPRZETU  BETWEEN  :ID_SPRZETU_OD   AND :ID_SPRZETU_DO AND
 U.POZYCJA     BETWEEN  :POZYCJA_OD AND :POZYCJA_DO  AND
 RE.ID_REMONTU BETWEEN  :ID_REMONTU_OD AND :ID_REMONTU_DO
 GROUP BY H.ROK, H.ID_HARMONOGRAMU,RE.KOD_REM
 INTO :ROK_HARM, :ID_HARM, :RODZ_REM, :ILOSC_P_DET, :RBH_P_DET
 DO BEGIN
 SELECT  SUM(R.ILOSC), SUM(R.LICZBA_RBH)
 FROM PR_ZLECENIA Z
 INNER JOIN PR_ZLECENIA_RBH R ON R.ROK = Z.ROK AND R.ID_KOMORKI = Z.ID_KOMORKI AND Z.ID_ZLECENIA = R.ID_ZLECENIA
 WHERE
 Z.ROK = :ROK_HARM AND Z.ID_HARM = :ID_HARM  AND
 EXTRACT(YEAR FROM Z.DATA_WYST) =:ROK AND
 EXTRACT(MONTH FROM Z.DATA_WYST) <=  :MIES_DO   AND
 (Z.DATA_ZAK IS NULL OR Z.DATA_ZAK < '1900-01-01' OR  (EXTRACT(YEAR FROM Z.DATA_ZAK) =:ROK AND   EXTRACT(MONTH FROM Z.DATA_ZAK)   >=  :MIES_OD) )
 INTO  :ILOSC_R_DET, :RBH_R_DET;
 IF(ILOSC_P_DET IS NULL) THEN ILOSC_P_DET =0;
 IF(RBH_P_DET IS NULL)   THEN RBH_P_DET =0;
 IF(ILOSC_R_DET IS NULL) THEN ILOSC_R_DET =0;
 IF(RBH_R_DET IS NULL)   THEN RBH_R_DET =0;
 ILOSC_P = ILOSC_P + ILOSC_P_DET;
 ILOSC_R = ILOSC_R + ILOSC_R_DET;
 RBH_P   = RBH_P   + RBH_P_DET;
 RBH_R   = RBH_R   + RBH_R_DET;
 END
 SUSPEND;
end
#C